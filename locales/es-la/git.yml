git:
  meta:
    _root:
      title: "üêô Git y GitHub CLI"
      desc: "Comandos b√°sicos y avanzados de Git para control de versiones, ramas, repositorios remotos, stash, etiquetas y GitHub CLI."

  basic:
    _root:
      title: "üîπ Comandos b√°sicos"
    git_add:
      desc: "Agregar un archivo al √°rea de preparaci√≥n (staging)"
      ex1: "Preparar un archivo espec√≠fico para el pr√≥ximo commit"
      ex2: "Preparar todos los cambios en el directorio actual y subdirectorios"
      ex3: "Elegir interactivamente qu√© partes de los archivos preparar (√∫til para commits parciales)"
    git_clone:
      desc: "Clonar un repositorio en un nuevo directorio"
      ex1: "Clonar solo la rama especificada (en lugar de la predeterminada)"
      ex2: "Clonar solo el √∫ltimo commit, creando una copia superficial para ahorrar tiempo y espacio"
    git_commit:
      desc: "Registrar cambios en el repositorio"
      ex1: "Hacer un commit con un mensaje sin abrir el editor"
      ex2: "Preparar y hacer commit de todos los archivos modificados con un mensaje"
      ex3: "Actualizar el √∫ltimo commit (cambiar mensaje o incluir m√°s cambios)"
      ex4: "Crear un commit de correcci√≥n (fixup) para hacer squash autom√°ticamente despu√©s durante un rebase interactivo"
    git_config:
      desc: "Obtener y establecer opciones de repositorio o globales"
      ex1: "Configurar el nombre de usuario global de Git"
      ex2: "Configurar el correo electr√≥nico global de Git"
      ex3: "Listar todas las configuraciones de Git (nombre, correo, editor, etc.)"
    git_diff:
      desc: "Mostrar cambios entre commits, entre un commit y el √°rbol de trabajo, etc."
      ex1: "Mostrar los cambios desde el √∫ltimo commit (cambios no preparados)"
      ex2: "Mostrar qu√© se incluir√° en el pr√≥ximo commit"
      ex3: "Mostrar cambios con diferencias a nivel de palabras"
    git_grep:
      desc: "Buscar dentro de los archivos del repositorio"
      ex1: "Encontrar todas las menciones de `functionName` en todos los archivos del proyecto"
      ex2: "Encontrar l√≠neas con `TODO` y mostrar n√∫meros de l√≠nea (√∫til para localizar notas en el c√≥digo)"
      ex3: "Buscar la palabra `login` sin importar may√∫sculas o min√∫sculas (coincide con `Login`, `LOGIN`, `login`, etc.)"
    git_init:
      desc: "Crear un repositorio vac√≠o de Git o reinicializar uno existente"
      ex1: "Inicializar un nuevo repositorio en el directorio my-project"
      ex2: "Inicializar un repositorio bare (desnudo)"
    git_log:
      desc: "Mostrar el historial de commits"
      ex1: "Mostrar historial de commits en formato compacto de una l√≠nea"
      ex2: "Mostrar todas las ramas en un gr√°fico visual de commits"
      ex3: "Mostrar parches y estad√≠sticas de cambios por archivo en los commits"
    git_reset:
      desc: "Quitar archivos del √°rea de preparaci√≥n, manteniendo cambios en el directorio de trabajo"
      ex1: "Quitar un archivo del √°rea de staging (mantiene tus ediciones)"
      ex2: "Regresar un commit y eliminar todos los cambios (¬°irreversible!)"
      ex3: "Deshacer el √∫ltimo commit pero mantener los cambios listos para volver a hacer commit"
      ex4: "Deshacer un commit pero mantener cambios sin preparar en el directorio de trabajo"
    git_show:
      desc: "Mostrar varios tipos de objetos"
      ex1: "Mostrar cambios y mensaje de un commit espec√≠fico"
      ex2: "Mostrar el commit anterior al actual"
      ex3: "Mostrar un resumen de los cambios de archivos en el √∫ltimo commit"
    git_status:
      desc: "Mostrar el estado del √°rbol de trabajo"
      ex1: "Mostrar estado en formato corto"
      ex2: "Mostrar la rama actual y el estado de los archivos"

  branching_merging:
    _root:
      title: "üåø Ramas y fusiones"
    git_branch:
      desc: "Crear, listar o eliminar ramas"
      ex1: "Crear una nueva rama llamada `new-feature`"
      ex2: "Eliminar una rama local llamada `old-feature`"
    git_checkout:
      desc: "Cambiar de rama o restaurar archivos desde otro commit"
      ex1: "Cambiar a la rama `main`"
      ex2: "Crear y cambiar a una nueva rama llamada `new-branch`"
    git_switch:
      desc: "Cambiar de rama (alternativa simplificada a `checkout`)"
      ex1: "Cambiar a la rama `main`"
      ex2: "Crear y cambiar a una nueva rama llamada `feature-x`"
      ex3: "Cambiar a una rama existente llamada `new-feature`"
    git_merge:
      desc: "Combinar cambios de otra rama en la rama actual"
      ex1: "Fusionar la rama `new-feature` en la actual"
      ex2: "Siempre crear un commit de merge (incluso si es fast-forward)"
      ex3: "Cancelar la fusi√≥n y revertir cambios si ocurren conflictos"
    git_rebase:
      desc: "Mover o reaplicar commits sobre un nuevo commit base"
      ex1: "Reaplicar los commits de tu rama encima de la rama `main`"
      ex2: "Editar interactivamente los √∫ltimos 3 commits"
      ex3: "Detener y deshacer un rebase en progreso"
      ex4: "Hacer squash autom√°ticamente de commits marcados como fixup o squash durante rebase interactivo"
    git_cherry_pick:
      desc: "Aplicar commits espec√≠ficos de otra rama"
      ex1: "Aplicar un commit espec√≠fico (por hash) a la rama actual"
      ex2: "Continuar cherry-pick despu√©s de resolver conflictos"
      ex3: "Aplicar un rango de commits desde `A` (excluido) hasta `B` (incluido)"

  remote:
    _root:
      title: "üì° Repositorios remotos"
    git_remote:
      desc: "Administrar enlaces a repositorios remotos (como GitHub)"
      ex1: "Mostrar nombres de remotos y sus URLs"
      ex2: "Agregar un repositorio remoto llamado `origin`"
    git_pull:
      desc: "Descargar y fusionar autom√°ticamente cambios desde una rama remota"
      ex1: "Obtener y fusionar cambios de la rama remota `main` en la rama actual"
      ex2: "Obtener y rebasear la rama actual encima de la rama remota en lugar de fusionar"
    git_push:
      desc: "Subir tus cambios locales a un repositorio remoto"
      ex1: "Enviar tu rama local `main` al remoto `origin`"
    git_fetch:
      desc: "Descargar cambios de un remoto sin fusionar"
      ex1: "Obtener todas las actualizaciones del remoto `origin`, pero sin aplicarlas a√∫n"
      ex2: "Obtener solo la rama `main` del remoto"
      ex3: "Obtener actualizaciones de todos los remotos"
      ex4: "Limpiar ramas eliminadas ‚Äî quitar refs locales de ramas borradas en el remoto"
      ex5: "Mostrar qu√© se obtendr√≠a, sin descargar realmente nada"
      ex6: "Forzar la actualizaci√≥n de tu rama de seguimiento local (`origin/main`), sobrescribiendo conflictos"

  stash_cleanup:
    _root:
      title: "üì¶ Stash y limpieza"
    git_stash:
      desc: "Guardar temporalmente cambios no confirmados (trabajo en progreso)"
      ex1: "Guardar archivos modificados y preparados, luego revertir el directorio de trabajo al √∫ltimo commit"
      ex2: "Reaplicar los √∫ltimos cambios en stash (el stash permanece guardado)"
      ex3: "Reaplicar y eliminar el √∫ltimo stash"
      ex4: "Mostrar la lista de todos los cambios guardados en stash"
      ex5: "Crear una nueva rama y aplicar el √∫ltimo stash en ella"
    git_clean:
      desc: "Eliminar permanentemente archivos no rastreados (fuera de Git)"
      ex1: "Eliminar archivos no rastreados en el directorio actual"
      ex2: "Eliminar archivos y carpetas no rastreados"
      ex3: "Previsualizar qu√© se eliminar√° (ejecuci√≥n segura en modo prueba)"

  tags:
    _root:
      title: "üè∑Ô∏è Etiquetas"
    git_tag:
      desc: "Crear, listar o eliminar etiquetas para marcar puntos espec√≠ficos en la historia (como versiones)"
      ex1: "Crear una etiqueta anotada llamada `v1.0` con un mensaje (guardada como objeto completo de Git, √∫til para releases)"
      ex2: "Eliminar la etiqueta local `v1.0` (no afecta al remoto)"
    git_push:
      desc: "Subir commits, ramas y etiquetas del repositorio local al remoto"
      ex1: "Enviar todas las etiquetas locales al remoto (√∫til tras etiquetar varias versiones)"
      ex2: "Enviar una etiqueta espec√≠fica (ej. `v1.0`) al remoto"
      ex3: "Eliminar la etiqueta remota `v1.0` (nota la sintaxis con dos puntos)"

  conflicts:
    _root:
      title: "üõ†Ô∏è Resoluci√≥n de conflictos"
    git_mergetool:
      desc: "Abrir una herramienta visual para ayudar a resolver conflictos de fusi√≥n"
      ex1: "Usar una herramienta espec√≠fica de merge (como Meld) para resolver conflictos"
    git_rerere:
      desc: "Permitir que Git recuerde c√≥mo resolviste conflictos anteriormente"
      ex1: "Habilitar la reutilizaci√≥n autom√°tica de resoluciones pasadas"
      ex2: "Mostrar qu√© archivos tienen resoluciones guardadas"
      ex3: "Mostrar qu√© cambios guard√≥ Git para reutilizaci√≥n futura"

  advanced:
    _root:
      title: "‚öôÔ∏è Comandos avanzados"
    git_bisect:
      desc: "Usar b√∫squeda binaria para encontrar el commit que introdujo un error"
      ex1: "Iniciar una b√∫squeda binaria entre un commit bueno y uno malo para localizar un bug"
      ex2: "Marcar el commit actual como \"malo\" (contiene el bug)"
      ex3: "Marcar un commit conocido como \"bueno\" donde el bug no exist√≠a"
    git_blame:
      desc: "Mostrar qui√©n modific√≥ por √∫ltima vez cada l√≠nea de un archivo, con revisi√≥n y autor"
      ex1: "Mostrar autor e info de commit para cada l√≠nea de un archivo"
      ex2: "Mostrar blame solo para las l√≠neas 10 a 20"
      ex3: "Mostrar correos electr√≥nicos de autores junto a cambios"
    git_reflog:
      desc: "Ver y administrar el registro de referencias (reflog) de movimientos de ramas y HEAD"
      ex1: "Ver d√≥nde apuntaba la rama `main` hace una semana"
      ex2: "Previsualizar qu√© entradas de reflog mayores a 30 d√≠as pueden limpiarse (sin cambios a√∫n)"
      ex3: "Eliminar una entrada espec√≠fica del reflog (usar con cuidado, puede afectar la recuperaci√≥n)"
    git_submodule:
      desc: "Agregar, inicializar, actualizar o inspeccionar subm√≥dulos (repositorios dentro de repositorios)"
      ex1: "Agregar un repositorio externo como subm√≥dulo en la ruta especificada"
      ex2: "Inicializar y descargar todos los subm√≥dulos listados en el repositorio"
      ex3: "Ejecutar `git pull` dentro de cada subm√≥dulo para actualizarlos a su √∫ltimo commit"
      ex4: "Sincronizar URLs de subm√≥dulos tras cambios en el archivo `.gitmodules`"
      ex5: "Actualizar subm√≥dulos al √∫ltimo commit de sus ramas remotas"
    git_archive:
      desc: "Crear un archivo (zip, tar, etc.) de los archivos desde un commit o rama espec√≠fica"
      ex1: "Crear un archivo ZIP con los archivos actuales en HEAD"
      ex2: "Crear un archivo comprimido `.tar.gz` desde el HEAD actual"
      ex3: "Crear un `.tar.gz` comprimido del proyecto actual, colocando todos los archivos dentro de una carpeta llamada `project/` en el archivo"
    git_gc:
      desc: "Limpiar archivos innecesarios y optimizar el repositorio para rendimiento"
      ex1: "Realizar una limpieza y optimizaci√≥n a fondo (puede ser lenta pero efectiva)"
      ex2: "Eliminar inmediatamente todos los objetos inalcanzables (peligroso si no est√°s seguro)"
    git_shortlog:
      desc: "Resumen r√°pido de autores y sus commits"
      ex1: "Mostrar lista de autores con sus correos electr√≥nicos (ej. para analizar contribuciones)"
      ex2: "Mostrar cu√°ntos commits hizo cada autor, ordenados por cantidad"
      ex3: "Igual que arriba, pero tambi√©n incluye nombres y correos electr√≥nicos ‚Äî √∫til para seguimiento detallado de actividad"
    git_revert:
      desc: "Crear un nuevo commit que deshace cambios de un commit anterior sin reescribir la historia"
      ex1: "Deshacer el √∫ltimo commit creando un nuevo commit que revierte sus cambios"
      ex2: "Deshacer un commit espec√≠fico por hash, creando un nuevo commit que lo revierte de forma segura"

  gh:
    _root:
      title: "üêô GitHub CLI"
      note: "`gh` te permite administrar GitHub desde la terminal."
    gh_auth_login:
      desc: "Autenticarse con un host de GitHub para permitir que los comandos CLI interact√∫en con tu cuenta"
      ex1: "Autenticarse usando un token de acceso personal almacenado en un archivo (`mytoken.txt`)"
      ex2: "Autenticarse en un servidor de GitHub Enterprise (no github.com)"
    gh_repo_clone:
      desc: "Clonar un repositorio de GitHub en tu m√°quina local"
      ex1: "Clonar el repositorio repo propiedad de `user` en una carpeta llamada `repo`"
      ex2: "Clonar el repositorio pero solo descargar el √∫ltimo commit para una clonaci√≥n m√°s r√°pida y ligera"
      ex3: "Clonar el repositorio en una carpeta personalizada `workspace/cli`"
    gh_issue_list:
      desc: "Listar issues en un repositorio de GitHub, opcionalmente filtrados por varios criterios"
      ex1: "Listar issues asignados a ti"
      ex2: "Listar issues sin importar el estado (abiertos o cerrados)"
      ex3: "Listar issues que coincidan con \"error\", sin asignar, ordenados por fecha de creaci√≥n ascendente"
    gh_pr_create:
      desc: "Crear un pull request en GitHub mediante CLI"
      ex1: "Crear un pull request con el t√≠tulo dado"
      ex2: "Vincular el pull request a un proyecto de GitHub llamado \"Roadmap\""
      ex3: "Crear un PR desde la rama `feature` en el fork `monalisa` hacia la rama `develop`"
    gh_repo_create:
      desc: "Crear un nuevo repositorio de GitHub desde CLI"
      ex1: "Crear un nuevo repositorio llamado `my-project` en GitHub (con preguntas interactivas)"
      ex2: "Crear un repositorio p√∫blico y clonarlo localmente"
      ex3: "Crear un repositorio remoto privado desde la carpeta actual y agregar el remoto llamado `upstream`"

  aliases:
    _root:
      title: "üí° Alias de Git (atajos √∫tiles)"
      intro: "Configura alias convenientes para acelerar los comandos comunes de Git:"

  pro:
    _root:
      title: "üöÄ Comandos avanzados de Git para profesionales"
    git_filter_repo:
      desc: "Una herramienta poderosa y eficiente para reescribir el historial de Git para eliminar o modificar archivos, autor√≠a o rutas; reemplaza git filter-branch con m√°s velocidad y seguridad"
      ex1: "Reescribir eficientemente el historial del repositorio para eliminar archivos o directorios sensibles sin los problemas de rendimiento de `git filter-branch`. Usar con precauci√≥n"
      ex2: "Reemplazar cadenas o patrones en todo el historial (ej. sanear credenciales)"
      ex3: "Extraer el historial de un subdirectorio en un nuevo repositorio, preservando metadatos de commits"
    git_worktree:
      desc: "Administrar m√∫ltiples directorios de trabajo vinculados a un solo repositorio, permitiendo trabajar en ramas diferentes sin clonar"
      ex1: "Crear un directorio de trabajo adicional enlazado al mismo repositorio, permitiendo checkouts paralelos sin clones"
      ex2: "Listar todos los worktrees activos, sus rutas y ramas asociadas"
      ex3: "Eliminar un worktree cuando ya no sea necesario, limpiando directorios de manera segura"
    git_replace:
      desc: "Crear referencias temporales que reemplazan objetos existentes, permitiendo manipulaci√≥n y pruebas locales de historial sin destruirlo"
      ex1: "Intercambiar temporalmente un commit por otro en tu repositorio local, √∫til para pruebas sin reescribir el historial"
      ex2: "Mostrar todas las referencias de reemplazo activas"
      ex3: "Eliminar una referencia de reemplazo espec√≠fica para revertir el comportamiento"
    git_stash_adv:
      desc: "Guardar temporalmente cambios no confirmados en una pila, permitiendo cambiar de contexto sin confirmar trabajo incompleto"
      ex1: "Seleccionar interactivamente fragmentos de cambios para guardar en stash, con control granular"
      ex2: "Crear un stash con un mensaje personalizado para identificarlo f√°cilmente"
      ex3: "Aplicar un stash espec√≠fico de la lista sin eliminarlo"
    git_rebase_adv:
      desc: "Reaplicar commits sobre otra base, facilitando un historial m√°s limpio y lineal, adem√°s de edici√≥n interactiva"
      ex1: "Iniciar un rebase interactivo que reordena y hace squash autom√°tico de commits marcados como fixup o squash, limpiando el historial"
      ex2: "Reordenar y hacer squash autom√°ticamente de commits marcados como fixup o squash antes de enviar cambios"
      ex3: "Crear un commit fixup que ser√° autosquasheado durante el rebase interactivo"
      ex4: "Crear un commit squash para combinar con un commit espec√≠fico en el rebase"
    git_bisect_pro:
      desc: "Herramienta de b√∫squeda binaria para identificar el commit que introdujo un bug probando commits sucesivos"
      ex1: "Automatizar el proceso de bisect ejecutando un script de prueba en cada commit para identificar r√°pidamente el commit con el bug"
      ex2: "Automatizar la b√∫squeda ejecutando un script de prueba en cada commit, acelerando la identificaci√≥n del bug"
      ex3: "Abrir una herramienta gr√°fica para visualizar el proceso de bisect"
      ex4: "Salir del modo bisect y volver al HEAD original"
    git_commit_pro:
      desc: "Registrar cambios en el repositorio con opciones detalladas para enmendar, firmar, fixup y personalizar mensajes, manteniendo un historial de calidad"
      ex1: "Crear un commit firmado con tu clave GPG para asegurar autenticidad y autor√≠a"
      ex2: "Firmar criptogr√°ficamente tus commits con tu clave GPG para verificar integridad y autor√≠a"
      ex3: "Configurar la clave GPG usada para firmar commits de forma global"
      ex4: "Verificar y mostrar informaci√≥n de firmas GPG en los commits"
    git_reflog_pro:
      desc: "Mantener un registro de actualizaciones de HEAD y ramas, esencial para recuperar commits perdidos y entender movimientos locales"
      ex1: "Resetear la rama actual a un estado previo desde el reflog para recuperar o deshacer cambios"
      ex2: "Expirar inmediatamente todas las entradas del reflog, limpiando el historial (usar con precauci√≥n)"

  pro_tips:
    _root:
      title: "üß∞ Consejos de flujo de trabajo y automatizaci√≥n para profesionales"
    columns:
      topic: "Tema"
      commands_example: "Comandos / Ejemplo"
      explanation_tips: "Explicaci√≥n y consejos pro"
    aggressive_cleanup:
      topic: "Limpieza agresiva de repositorio"
      desc: "Realiza recolecci√≥n de basura profunda y poda objetos inalcanzables inmediatamente para optimizar el repositorio. Usar en ventanas de mantenimiento"
    parallel_worktrees:
      topic: "Worktrees paralelos de ramas"
      desc: "Mantener m√∫ltiples directorios de trabajo para desarrollo simult√°neo de features, evitando sobrecarga de clones"
    linear_history:
      topic: "Historial limpio y lineal"
      desc: "Antes de hacer push, rebasear interactivamente con autosquash para mantener el historial limpio y legible"
    secure_commits:
      topic: "Commits seguros"
      desc: "Firmar commits con GPG para aumentar la confianza en repositorios compartidos, obligatorio en muchos entornos empresariales"
    automated_bisect:
      topic: "B√∫squeda automatizada (bisect)"
      desc: "Automatizar la detecci√≥n de bugs ejecutando un script de prueba en cada commit durante bisect"
    conflict_cache:
      topic: "Cach√© de resoluci√≥n de conflictos"
      desc: "Habilitar la reutilizaci√≥n de resoluciones de conflictos para acelerar merges o rebases repetidos"
    shared_aliases_hooks:
      topic: "Alias y hooks compartidos"
      desc: "Guardar alias comunes y hooks de commit en un repositorio compartido o pipeline CI para reforzar est√°ndares de equipo y productividad"

  resources:
    _root:
      title: "Recursos adicionales"
    tip:
      title: "üß† **Consejo**"
      desc: "No intentes memorizar todo. Usa `--help`, explora y practica regularmente:"
    links:
      title: "üåê Enlaces √∫tiles"
      official_docs: "üìò **Documentaci√≥n oficial de Git** ‚Äî manual detallado de todos los comandos de Git:"
      learn_branching: "üìô **Learn Git Branching** ‚Äî tutorial visual interactivo para dominar conceptos de ramas:"
      pro_git_book: "üìï **Libro Pro Git** (gratis, por Scott Chacon & Ben Straub):"
      official_cheatsheet: "üìó **Git Cheatsheet** (referencia oficial concisa):"
