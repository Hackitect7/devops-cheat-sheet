git:
  meta:
    _root:
      title: "🐙 گیت و GitHub CLI"
      desc: "دستورات پایه و پیشرفته گیت برای کنترل نسخه، شاخه‌ها، مخازن راه‌دور، استش، تگ‌ها و GitHub CLI."

  basic:
    _root:
      title: "🔹 دستورات پایه"
    git_add:
      desc: "افزودن یک فایل به staging area"
      ex1: "مرحله‌بندی یک فایل مشخص برای کامیت بعدی"
      ex2: "مرحله‌بندی همه تغییرات در پوشه جاری و زیرپوشه‌ها"
      ex3: "انتخاب تعاملی بخش‌های فایل برای مرحله‌بندی (مفید برای کامیت‌های جزئی)"
    git_clone:
      desc: "کلون‌کردن یک مخزن در یک پوشه جدید"
      ex1: "کلون فقط شاخه مشخص (به‌جای شاخه پیش‌فرض)"
      ex2: "کلون فقط آخرین کامیت برای صرفه‌جویی در زمان و فضا (shallow copy)"
    git_commit:
      desc: "ثبت تغییرات در مخزن"
      ex1: "کامیت با پیام بدون باز کردن ویرایشگر"
      ex2: "مرحله‌بندی و کامیت همه فایل‌های تغییر یافته با پیام"
      ex3: "به‌روزرسانی آخرین کامیت (تغییر پیام یا افزودن تغییرات بیشتر)"
      ex4: "ایجاد یک fixup commit برای squash خودکار در rebase تعاملی"
    git_config:
      desc: "گرفتن و تنظیم گزینه‌های مخزن یا global"
      ex1: "تنظیم نام کاربری گیت به‌صورت global"
      ex2: "تنظیم ایمیل گیت به‌صورت global"
      ex3: "لیست تمام تنظیمات گیت (نام، ایمیل، ویرایشگر و غیره)"
    git_diff:
      desc: "نمایش تغییرات بین کامیت‌ها، کامیت و پوشه کاری و غیره"
      ex1: "نمایش تغییراتی که از آخرین کامیت انجام داده‌اید (unstaged)"
      ex2: "نمایش تغییراتی که در کامیت بعدی گنجانده خواهند شد"
      ex3: "نمایش تغییرات با تفاوت‌های سطح کلمه"
    git_grep:
      desc: "جستجو در فایل‌های مخزن"
      ex1: "پیدا کردن همه اشاره‌ها به `functionName` در فایل‌های پروژه"
      ex2: "پیدا کردن خطوط شامل `TODO` و نمایش شماره خط‌ها (مفید برای پیدا کردن یادداشت‌ها)"
      ex3: "جستجوی کلمه `login` بدون توجه به حروف بزرگ/کوچک (مطابق `Login`, `LOGIN`, `login`)"
    git_init:
      desc: "ایجاد یک مخزن خالی گیت یا بازنشانی مخزن موجود"
      ex1: "ایجاد یک مخزن جدید در پوشه my-project"
      ex2: "ایجاد یک مخزن bare"
    git_log:
      desc: "نمایش تاریخچه کامیت‌ها"
      ex1: "نمایش تاریخچه کامیت در قالب یک‌خطی فشرده"
      ex2: "نمایش همه شاخه‌ها در یک گراف تصویری از کامیت‌ها"
      ex3: "نمایش patch و آمار تغییرات فایل‌ها برای کامیت‌ها"
    git_reset:
      desc: "خارج کردن فایل‌ها از stage و حفظ تغییرات در پوشه کاری"
      ex1: "حذف یک فایل از stage (ویرایش‌ها حفظ می‌شوند)"
      ex2: "بازگشت یک کامیت عقب‌تر و حذف تمام تغییرات (غیرقابل‌بازگشت!)"
      ex3: "لغو آخرین کامیت ولی نگه داشتن تغییرات برای کامیت مجدد"
      ex4: "لغو یک کامیت ولی نگه داشتن تغییرات در پوشه کاری"
    git_show:
      desc: "نمایش انواع مختلف objectها"
      ex1: "نمایش تغییرات و پیام یک کامیت مشخص"
      ex2: "نمایش کامیت قبلی قبل از کامیت جاری"
      ex3: "نمایش خلاصه تغییرات فایل برای آخرین کامیت"
    git_status:
      desc: "نمایش وضعیت پوشه کاری"
      ex1: "نمایش وضعیت در قالب کوتاه"
      ex2: "نمایش شاخه جاری و وضعیت فایل‌ها"

  branching_merging:
    _root:
      title: "🌿 شاخه‌بندی و ادغام"
    git_branch:
      desc: "ایجاد، لیست یا حذف شاخه‌ها"
      ex1: "ایجاد یک شاخه جدید به نام `new-feature`"
      ex2: "حذف یک شاخه محلی به نام `old-feature`"
    git_checkout:
      desc: "تغییر شاخه یا بازگرداندن فایل‌ها از یک کامیت دیگر"
      ex1: "تغییر به شاخه `main`"
      ex2: "ایجاد و تغییر به یک شاخه جدید به نام `new-branch`"
    git_switch:
      desc: "تغییر شاخه‌ها (جایگزین ساده‌تر برای `checkout`)"
      ex1: "تغییر به شاخه `main`"
      ex2: "ایجاد و تغییر به یک شاخه جدید به نام `feature-x`"
      ex3: "تغییر به شاخه موجود به نام `new-feature`"
    git_merge:
      desc: "ترکیب تغییرات از یک شاخه دیگر در شاخه جاری"
      ex1: "ادغام شاخه `new-feature` در شاخه جاری"
      ex2: "ایجاد یک merge commit حتی اگر fast-forward ممکن باشد"
      ex3: "لغو ادغام و بازگرداندن تغییرات در صورت بروز conflict"
    git_rebase:
      desc: "جابجایی یا اعمال مجدد کامیت‌ها روی یک کامیت پایه جدید"
      ex1: "اعمال مجدد کامیت‌های شاخه شما روی شاخه `main`"
      ex2: "ویرایش تعاملی ۳ کامیت آخر"
      ex3: "توقف و لغو یک rebase در حال انجام"
      ex4: "squash خودکار کامیت‌های مشخص‌شده به‌عنوان fixup یا squash در rebase تعاملی"
    git_cherry_pick:
      desc: "اعمال کامیت‌های مشخص از یک شاخه دیگر"
      ex1: "اعمال یک کامیت مشخص (با hash) به شاخه جاری"
      ex2: "ادامه cherry-pick پس از رفع conflictها"
      ex3: "اعمال بازه‌ای از کامیت‌ها از `A` (به‌جز) تا `B` (شامل)"

  remote:
    _root:
      title: "📡 مخازن راه‌دور"
    git_remote:
      desc: "مدیریت لینک‌ها به مخازن راه‌دور (مثل GitHub)"
      ex1: "نمایش نام remoteها و آدرس‌های آن‌ها"
      ex2: "افزودن یک remote به نام `origin`"
    git_pull:
      desc: "دانلود و ادغام خودکار تغییرات از یک شاخه راه‌دور"
      ex1: "دریافت و ادغام تغییرات از شاخه `main` در remote به شاخه جاری"
      ex2: "دریافت و rebase شاخه جاری روی شاخه راه‌دور به‌جای ادغام"
    git_push:
      desc: "آپلود تغییرات محلی به یک مخزن راه‌دور"
      ex1: "push شاخه `main` محلی به remote `origin`"
    git_fetch:
      desc: "دانلود تغییرات از remote بدون ادغام"
      ex1: "دریافت همه به‌روزرسانی‌ها از remote `origin` ولی بدون اعمال"
      ex2: "دریافت فقط شاخه `main` از remote"
      ex3: "دریافت تغییرات از همه remoteها"
      ex4: "پاک‌سازی شاخه‌های حذف‌شده — حذف refهای محلی برای شاخه‌هایی که از راه‌دور حذف شدند"
      ex5: "نمایش مواردی که دریافت خواهند شد بدون دانلود واقعی"
      ex6: "به‌روزرسانی اجباری شاخه محلی (`origin/main`) با بازنویسی conflictها"

  stash_cleanup:
    _root:
      title: "📦 استش و پاک‌سازی"
    git_stash:
      desc: "ذخیره موقت تغییرات ذخیره‌نشده (کار در حال انجام)"
      ex1: "ذخیره فایل‌های تغییر یافته و staged، سپس بازگرداندن پوشه کاری به آخرین کامیت"
      ex2: "اعمال مجدد آخرین stash (stash باقی می‌ماند)"
      ex3: "اعمال و حذف آخرین stash"
      ex4: "نمایش لیست همه stashها"
      ex5: "ایجاد یک شاخه جدید و اعمال آخرین stash روی آن"
    git_clean:
      desc: "حذف دائمی فایل‌های untracked (خارج از گیت)"
      ex1: "حذف فایل‌های untracked در پوشه جاری"
      ex2: "حذف فایل‌ها و پوشه‌های untracked"
      ex3: "پیش‌نمایش مواردی که حذف خواهند شد (dry run ایمن)"

  tags:
    _root:
      title: "🏷️ تگ‌ها"
    git_tag:
      desc: "ایجاد، لیست یا حذف تگ‌ها برای علامت‌گذاری نقاط خاص در تاریخچه (مثل انتشارها)"
      ex1: "ایجاد یک تگ annotated به نام `v1.0` با پیام (ذخیره‌شده به‌عنوان یک object کامل گیت)"
      ex2: "حذف تگ محلی به نام `v1.0` (روی remote تأثیری ندارد)"
    git_push:
      desc: "آپلود کامیت‌ها، شاخه‌ها و تگ‌ها از محلی به مخزن راه‌دور"
      ex1: "push همه تگ‌های محلی به remote (مفید پس از تگ‌گذاری چند نسخه)"
      ex2: "push یک تگ مشخص (مثلاً `v1.0`) به remote"
      ex3: "حذف تگ `v1.0` در remote (با استفاده از دستور colon)"

  conflicts:
    _root:
      title: "🛠️ رفع تعارض‌ها"
    git_mergetool:
      desc: "بازکردن یک ابزار تصویری برای کمک به رفع conflictها"
      ex1: "استفاده از یک ابزار merge مشخص (مثل Meld) برای رفع conflict"
    git_rerere:
      desc: "به گیت اجازه دهید نحوه رفع conflictهای قبلی شما را به یاد بسپارد"
      ex1: "فعال‌سازی استفاده مجدد خودکار از راه‌حل‌های conflict گذشته"
      ex2: "نمایش فایل‌هایی که راه‌حل conflict ذخیره‌شده دارند"
      ex3: "نمایش تغییراتی که گیت برای استفاده مجدد ذخیره کرده است"

  advanced:
    _root:
      title: "⚙️ دستورات پیشرفته"
    git_bisect:
      desc: "استفاده از جستجوی دودویی برای پیدا کردن کامیتی که باگ را معرفی کرده است"
      ex1: "شروع جستجوی دودویی بین یک کامیت سالم و یک کامیت خراب برای یافتن باگ"
      ex2: 'علامت‌گذاری کامیت جاری به‌عنوان "خراب" (شامل باگ)'
      ex3: 'علامت‌گذاری یک کامیت شناخته‌شده به‌عنوان "سالم" که باگ وجود نداشته'
    git_blame:
      desc: "نمایش اینکه چه کسی آخرین تغییر هر خط از یک فایل را داده، همراه با نسخه و نویسنده"
      ex1: "نمایش نویسنده و اطلاعات کامیت برای هر خط فایل"
      ex2: "نمایش اطلاعات blame فقط برای خطوط ۱۰ تا ۲۰"
      ex3: "نمایش آدرس ایمیل نویسندگان در کنار تغییرات خط‌ها"
    git_reflog:
      desc: "مشاهده و مدیریت لاگ ارجاعات (reflog) شاخه‌ها و HEAD"
      ex1: "دیدن اینکه شاخه `main` یک هفته قبل کجا اشاره می‌کرد"
      ex2: "پیش‌نمایش ورودی‌های reflog قدیمی‌تر از ۳۰ روز که می‌توانند پاک شوند"
      ex3: "حذف یک ورودی مشخص reflog (با احتیاط، زیرا می‌تواند روی بازیابی اثر بگذارد)"
    git_submodule:
      desc: "افزودن، مقداردهی اولیه، به‌روزرسانی یا بررسی زیرماژول‌ها (مخازن داخل مخزن‌ها)"
      ex1: "افزودن یک مخزن خارجی به‌عنوان زیرماژول در مسیر مشخص"
      ex2: "مقداردهی اولیه و دانلود همه زیرماژول‌های لیست‌شده"
      ex3: "اجرای `git pull` داخل هر زیرماژول برای به‌روزرسانی آن‌ها به آخرین کامیت"
      ex4: "همگام‌سازی آدرس‌های زیرماژول پس از تغییر در فایل `.gitmodules`"
      ex5: "به‌روزرسانی زیرماژول‌ها به آخرین کامیت از شاخه‌های راه‌دور آن‌ها"
    git_archive:
      desc: "ایجاد یک آرشیو (zip, tar و غیره) از فایل‌های یک کامیت یا شاخه مشخص"
      ex1: "ایجاد آرشیو ZIP از فایل‌های پروژه در HEAD"
      ex2: "ایجاد آرشیو فشرده `.tar.gz` از HEAD جاری"
      ex3: "ایجاد آرشیو فشرده `.tar.gz` از پروژه جاری و قرار دادن همه فایل‌ها در پوشه `project/` داخل آرشیو"
    git_gc:
      desc: "پاک‌سازی فایل‌های غیرضروری و بهینه‌سازی مخزن برای عملکرد"
      ex1: "اجرای یک پاک‌سازی و بهینه‌سازی کامل (ممکن است کند باشد ولی مؤثر است)"
      ex2: "حذف فوری همه objectهای غیرقابل‌دسترس (خطرناک اگر مطمئن نباشید)"
    git_shortlog:
      desc: "خلاصه سریع از نویسندگان و کامیت‌های آن‌ها"
      ex1: "نمایش لیست نویسندگان همراه ایمیل آن‌ها (برای تحلیل مشارکت‌ها)"
      ex2: "نمایش تعداد کامیت‌های هر نویسنده، مرتب‌شده بر اساس تعداد"
      ex3: "مانند بالا، ولی شامل نام‌ها و ایمیل‌ها — مفید برای ردیابی دقیق فعالیت"
    git_revert:
      desc: "ایجاد یک کامیت جدید که تغییرات یک کامیت قبلی را بدون بازنویسی تاریخچه لغو می‌کند"
      ex1: "لغو آخرین کامیت با ایجاد یک کامیت جدید که تغییرات آن را برمی‌گرداند"
      ex2: "لغو یک کامیت مشخص با hash، با افزودن یک کامیت جدید که آن را برمی‌گرداند"

  gh:
    _root:
      title: "🐙 GitHub CLI"
      note: "`gh` به شما اجازه می‌دهد GitHub را از طریق ترمینال مدیریت کنید."
    gh_auth_login:
      desc: "احراز هویت با یک هاست GitHub برای اجازه به دستورات CLI جهت تعامل با حساب شما"
      ex1: "احراز هویت با استفاده از یک personal access token ذخیره‌شده در فایل (`mytoken.txt`)"
      ex2: "احراز هویت در یک سرور GitHub Enterprise (نه github.com)"
    gh_repo_clone:
      desc: "کلون کردن یک مخزن GitHub در دستگاه محلی شما"
      ex1: "کلون مخزن متعلق به `user` در پوشه‌ای به نام `repo`"
      ex2: "کلون مخزن فقط با دانلود آخرین کامیت برای کلونی سریع‌تر و کوچک‌تر"
      ex3: "کلون مخزن در پوشه سفارشی `workspace/cli`"
    gh_issue_list:
      desc: "لیست کردن issues در یک مخزن GitHub، با امکان فیلتر بر اساس معیارهای مختلف"
      ex1: "لیست کردن issues اختصاص داده‌شده به شما"
      ex2: "لیست کردن issues صرف‌نظر از وضعیت (باز یا بسته)"
      ex3: 'لیست کردن issues مطابق با "error"، بدون مسئول، مرتب‌شده بر اساس تاریخ ایجاد به‌صورت صعودی'
    gh_pr_create:
      desc: "ایجاد یک pull request در GitHub از طریق CLI"
      ex1: "ایجاد یک pull request با عنوان داده‌شده"
      ex2: 'لینک‌کردن pull request به یک پروژه GitHub با نام "Roadmap"'
      ex3: "ایجاد یک PR از شاخه `feature` در fork به نام `monalisa` به شاخه `develop`"
    gh_repo_create:
      desc: "ایجاد یک مخزن جدید در GitHub از طریق CLI"
      ex1: "ایجاد مخزن جدید به نام `my-project` در GitHub (با اعلان‌های تعاملی)"
      ex2: "ایجاد یک مخزن عمومی و کلون کردن آن به‌صورت محلی"
      ex3: "ایجاد یک مخزن خصوصی از پوشه جاری و افزودن remote به نام `upstream`"

  aliases:
    _root:
      title: "💡 نام‌های مستعار Git (میانبرهای مفید)"
      intro: "برای سرعت بخشیدن به دستورات متداول Git، نام‌های مستعار مناسب تنظیم کنید:"

  pro:
    _root:
      title: "🚀 دستورات پیشرفته Git برای حرفه‌ای‌ها"
    git_filter_repo:
      desc: "ابزاری قدرتمند و سریع برای بازنویسی تاریخچه Git جهت حذف یا تغییر فایل‌ها، نویسندگان یا مسیرها؛ جایگزین git filter-branch با سرعت و ایمنی بهتر"
      ex1: "بازنویسی کارآمد تاریخچه مخزن برای حذف فایل‌ها یا شاخه‌های حساس بدون مشکلات عملکردی `git filter-branch`. با احتیاط استفاده شود"
      ex2: "جایگزینی گروهی رشته‌ها یا الگوها در سراسر تاریخچه (مثلاً حذف اطلاعات حساس)"
      ex3: "استخراج تاریخچه یک زیرپوشه به یک مخزن جدید با حفظ متادیتای کامیت‌ها"
    git_worktree:
      desc: "مدیریت چندین پوشه کاری متصل به یک مخزن، برای کار همزمان روی شاخه‌های مختلف بدون کلون اضافی"
      ex1: "ایجاد یک پوشه کاری اضافی متصل به همان مخزن برای checkout موازی شاخه‌ها"
      ex2: "لیست کردن همه worktreeهای فعال، مسیرها و شاخه‌های مرتبط"
      ex3: "حذف یک worktree متصل هنگام عدم نیاز، با پاک‌سازی ایمن پوشه‌های کاری"
    git_replace:
      desc: "ایجاد ارجاعات موقت برای جایگزینی objectهای موجود، جهت دستکاری محلی تاریخچه به‌صورت غیرمخرب و تست"
      ex1: "به‌طور موقت جایگزین کردن یک کامیت با دیگری در مخزن محلی، مفید برای تست یا اصلاح تاریخچه بدون بازنویسی"
      ex2: "نمایش همه refهای جایگزینی فعال"
      ex3: "حذف یک ref جایگزینی مشخص برای بازگردانی رفتار"
    git_stash_adv:
      desc: "ذخیره موقت تغییرات ذخیره‌نشده در یک پشته، برای تغییر زمینه بدون نیاز به کامیت کار نیمه‌تمام"
      ex1: "انتخاب تعاملی بخش‌هایی از تغییرات برای stash، جهت کنترل دقیق‌تر"
      ex2: "ایجاد stash با پیام سفارشی برای شناسایی راحت‌تر"
      ex3: "اعمال یک stash مشخص از لیست بدون حذف آن"
    git_rebase_adv:
      desc: "اعمال مجدد کامیت‌ها روی یک پایه جدید، برای تاریخچه خطی‌تر و تمیزتر و ویرایش تعاملی تاریخچه"
      ex1: "شروع یک rebase تعاملی که به‌طور خودکار کامیت‌های fixup یا squash را مرتب و ادغام می‌کند"
      ex2: "مرتب‌سازی و squash خودکار کامیت‌های fixup یا squash برای پاکسازی تاریخچه قبل از push"
      ex3: "ایجاد یک fixup commit که هنگام rebase تعاملی به‌طور خودکار squash می‌شود"
      ex4: "ایجاد یک squash commit برای ادغام با کامیت مشخص‌شده در rebase"
    git_bisect_pro:
      desc: "ابزار جستجوی دودویی برای شناسایی کارآمد کامیتی که باگ را معرفی کرده با تست متوالی و محدود کردن تغییرات معیوب"
      ex1: "خودکارسازی فرآیند bisect با اجرای یک اسکریپت تست روی هر کامیت برای شناسایی سریع باگ بدون دخالت دستی"
      ex2: "خودکارسازی bisect با اجرای اسکریپت تست روی هر کامیت، افزایش سرعت تشخیص باگ"
      ex3: "باز کردن یک ابزار گرافیکی برای نمایش فرآیند bisect"
      ex4: "خروج از حالت bisect و بازگشت به HEAD اصلی"
    git_commit_pro:
      desc: "ثبت تغییرات در مخزن با گزینه‌های دقیق برای اصلاح، امضا، fixup و سفارشی‌سازی پیام برای تاریخچه پروژه با کیفیت بالا"
      ex1: "ایجاد یک کامیت امضاشده با کلید GPG شما برای اطمینان از صحت و اصالت"
      ex2: "امضای رمزنگاری‌شده کامیت‌ها با کلید GPG برای تضمین صحت و اصالت"
      ex3: "تنظیم کلید GPG مورد استفاده برای امضای کامیت‌ها به‌صورت global"
      ex4: "بررسی و نمایش اطلاعات امضای GPG برای کامیت‌ها"
    git_reflog_pro:
      desc: "نگهداری لاگ به‌روزرسانی‌های HEAD و شاخه‌ها، ضروری برای بازیابی کامیت‌های گم‌شده و درک حرکات محلی تاریخچه"
      ex1: "بازنشانی شاخه جاری به یک وضعیت قبلی از reflog برای بازیابی یا بازگردانی تغییرات"
      ex2: "منقضی‌کردن فوری همه ورودی‌های reflog برای پاک‌سازی تاریخچه (با احتیاط استفاده شود)"

  pro_tips:
    _root:
      title: "🧰 نکات و خودکارسازی حرفه‌ای در گردش‌کار"
    columns:
      topic: "موضوع"
      commands_example: "دستورات / مثال"
      explanation_tips: "توضیحات و نکات حرفه‌ای"
    aggressive_cleanup:
      topic: "پاک‌سازی تهاجمی مخزن"
      desc: "اجرای garbage collection عمیق و هرس objectهای غیرقابل‌دسترس برای بهینه‌سازی مخزن. استفاده در زمان نگهداری"
    parallel_worktrees:
      topic: "Worktreeهای موازی شاخه‌ها"
      desc: "نگهداری چندین worktree برای توسعه همزمان ویژگی‌ها، جلوگیری از overhead کلون"
    linear_history:
      topic: "تاریخچه خطی و تمیز"
      desc: "قبل از push، یک rebase تعاملی با autosquash انجام دهید تا تاریخچه تمیز و خوانا بماند"
    secure_commits:
      topic: "کامیت‌های امن"
      desc: "امضای کامیت‌ها با GPG برای افزایش اعتماد در مخازن مشترک، که در بسیاری از محیط‌های سازمانی الزامی است"
    automated_bisect:
      topic: "Bisect خودکار"
      desc: "شکار باگ را با اجرای یک اسکریپت تست روی هر کامیت کاندید در طول bisect خودکار کنید"
    conflict_cache:
      topic: "حافظه کش رفع تعارض‌ها"
      desc: "فعال‌سازی استفاده مجدد از راه‌حل‌های conflict برای تسریع رفع تعارض‌های تکراری در rebase یا merge"
    shared_aliases_hooks:
      topic: "نام‌های مستعار و hookهای مشترک"
      desc: "ذخیره aliasهای متداول گیت و commit hookها در یک مخزن مشترک یا pipeline CI برای اجرای استانداردهای تیمی و افزایش بهره‌وری"

  resources:
    _root:
      title: "📚 منابع اضافی"
    tip:
      title: "🧠 **نکته**"
      desc: "لازم نیست همه‌چیز را حفظ کنید. از `--help` استفاده کنید، کاوش کنید و به‌طور منظم تمرین کنید:"
    links:
      title: "🌐 لینک‌های مفید"
      official_docs: "📘 **مستندات رسمی Git** — راهنمای دقیق برای همه دستورات Git:"
      learn_branching: "📙 **یادگیری شاخه‌بندی در Git** — آموزش تصویری تعاملی برای تسلط بر مفاهیم شاخه‌بندی:"
      pro_git_book: "📕 **کتاب Pro Git** (رایگان، نوشته Scott Chacon و Ben Straub):"
      official_cheatsheet: "📗 **برگه تقلب Git** (مرجع رسمی و خلاصه):"
