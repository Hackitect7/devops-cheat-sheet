git:
  meta:
    _root:
      title: "üêô Git et GitHub CLI"
      desc: "Commandes Git basiques et avanc√©es pour le contr√¥le de version, les branches, les d√©p√¥ts distants, le stash, les tags et GitHub CLI."

  basic:
    _root:
      title: "üîπ Commandes de base"
    git_add:
      desc: "Ajouter un fichier √† la zone de staging"
      ex1: "Ajouter un fichier sp√©cifique au prochain commit"
      ex2: "Ajouter toutes les modifications dans le r√©pertoire courant et ses sous-dossiers"
      ex3: "Choisir de mani√®re interactive quelles parties de fichiers ajouter (utile pour les commits partiels)"
    git_clone:
      desc: "Cloner un d√©p√¥t dans un nouveau r√©pertoire"
      ex1: "Cloner uniquement la branche sp√©cifi√©e (au lieu de la branche par d√©faut)"
      ex2: "Cloner uniquement le dernier commit, cr√©ant une copie l√©g√®re pour gagner temps et espace"
    git_commit:
      desc: "Enregistrer les modifications dans le d√©p√¥t"
      ex1: "Commit avec un message sans ouvrir l‚Äô√©diteur"
      ex2: "Ajouter et committer tous les fichiers suivis modifi√©s avec un message"
      ex3: "Mettre √† jour le dernier commit (modifier le message ou inclure plus de changements)"
      ex4: "Cr√©er un commit fixup pour l‚Äô√©craser automatiquement plus tard lors d‚Äôun rebase interactif"
    git_config:
      desc: "Obtenir et d√©finir des options globales ou locales du d√©p√¥t"
      ex1: "D√©finir le nom d‚Äôutilisateur Git global"
      ex2: "D√©finir l‚Äôemail Git global"
      ex3: "Lister toutes les configurations Git (nom, email, √©diteur, etc.)"
    git_diff:
      desc: "Afficher les diff√©rences entre commits, entre un commit et l‚Äôarborescence de travail, etc."
      ex1: "Afficher les modifications depuis le dernier commit (non index√©es)"
      ex2: "Afficher ce qui sera inclus dans le prochain commit"
      ex3: "Afficher les diff√©rences au niveau des mots"
    git_grep:
      desc: "Rechercher dans les fichiers du d√©p√¥t"
      ex1: "Trouver toutes les occurrences de `functionName` dans le projet"
      ex2: "Trouver les lignes contenant `TODO` avec num√©ros de lignes"
      ex3: "Rechercher le mot `login` sans tenir compte de la casse"
    git_init:
      desc: "Cr√©er un d√©p√¥t Git vide ou r√©initialiser un d√©p√¥t existant"
      ex1: "Initialiser un nouveau d√©p√¥t dans le dossier my-project"
      ex2: "Initialiser un d√©p√¥t nu"
    git_log:
      desc: "Afficher l‚Äôhistorique des commits"
      ex1: "Afficher l‚Äôhistorique des commits en format compact (une ligne)"
      ex2: "Afficher toutes les branches sous forme de graphe"
      ex3: "Afficher patch et statistiques de modifications des fichiers"
    git_reset:
      desc: "Retirer des fichiers de la zone de staging, en conservant les changements locaux"
      ex1: "Retirer un fichier du staging (garde vos modifications)"
      ex2: "Revenir un commit en arri√®re et supprimer tous les changements (irr√©versible!)"
      ex3: "Annuler le dernier commit mais conserver les changements pr√™ts √† √™tre recommis"
      ex4: "Annuler un commit mais garder les changements non index√©s"
    git_show:
      desc: "Afficher diff√©rents types d‚Äôobjets"
      ex1: "Afficher les changements et message d‚Äôun commit sp√©cifique"
      ex2: "Afficher le commit pr√©c√©dent"
      ex3: "Afficher un r√©sum√© des changements du dernier commit"
    git_status:
      desc: "Afficher l‚Äô√©tat de l‚Äôarborescence de travail"
      ex1: "Afficher l‚Äô√©tat en format court"
      ex2: "Afficher la branche courante et l‚Äô√©tat des fichiers"

  branching_merging:
    _root:
      title: "üåø Branches et fusions"
    git_branch:
      desc: "Cr√©er, lister ou supprimer des branches"
      ex1: "Cr√©er une nouvelle branche `new-feature`"
      ex2: "Supprimer une branche locale `old-feature`"
    git_checkout:
      desc: "Changer de branche ou restaurer des fichiers d‚Äôun autre commit"
      ex1: "Basculer sur la branche `main`"
      ex2: "Cr√©er et basculer sur une nouvelle branche `new-branch`"
    git_switch:
      desc: "Changer de branche (alternative simplifi√©e √† `checkout`)"
      ex1: "Basculer sur la branche `main`"
      ex2: "Cr√©er et basculer sur une nouvelle branche `feature-x`"
      ex3: "Basculer sur une branche existante `new-feature`"
    git_merge:
      desc: "Fusionner les changements d‚Äôune autre branche dans la branche courante"
      ex1: "Fusionner la branche `new-feature` dans la branche actuelle"
      ex2: "Toujours cr√©er un commit de fusion (m√™me si fast-forward possible)"
      ex3: "Annuler la fusion et revenir en arri√®re si conflits"
    git_rebase:
      desc: "Rejouer ou d√©placer des commits sur une nouvelle base"
      ex1: "Rejouer vos commits sur la branche `main`"
      ex2: "Modifier de mani√®re interactive les 3 derniers commits"
      ex3: "Annuler un rebase en cours"
      ex4: "√âcraser automatiquement les commits marqu√©s fixup ou squash"
    git_cherry_pick:
      desc: "Appliquer des commits sp√©cifiques d‚Äôune autre branche"
      ex1: "Appliquer un commit sp√©cifique (par hash) √† la branche actuelle"
      ex2: "Continuer apr√®s avoir r√©solu des conflits"
      ex3: "Appliquer une plage de commits de `A` (exclu) √† `B` (inclus)"

  remote:
    _root:
      title: "üì° D√©p√¥ts distants"
    git_remote:
      desc: "G√©rer les liens vers les d√©p√¥ts distants (comme GitHub)"
      ex1: "Afficher les noms et URLs des d√©p√¥ts distants"
      ex2: "Ajouter un d√©p√¥t distant nomm√© `origin`"
    git_pull:
      desc: "T√©l√©charger et fusionner automatiquement les modifications d‚Äôune branche distante"
      ex1: "R√©cup√©rer et fusionner les changements de `main` distant dans la branche locale"
      ex2: "R√©cup√©rer et rebaser la branche courante sur la branche distante"
    git_push:
      desc: "Envoyer vos modifications locales vers un d√©p√¥t distant"
      ex1: "Pousser la branche locale `main` vers `origin`"
    git_fetch:
      desc: "T√©l√©charger les changements distants sans les fusionner"
      ex1: "R√©cup√©rer toutes les mises √† jour de `origin`, sans les appliquer"
      ex2: "R√©cup√©rer uniquement la branche `main` distante"
      ex3: "R√©cup√©rer les mises √† jour de tous les d√©p√¥ts distants"
      ex4: "Nettoyer les branches supprim√©es √† distance"
      ex5: "Montrer ce qui serait r√©cup√©r√© sans rien t√©l√©charger"
      ex6: "Mettre √† jour de force la branche de suivi locale (`origin/main`)"

  stash_cleanup:
    _root:
      title: "üì¶ Stash et nettoyage"
    git_stash:
      desc: "Sauvegarder temporairement les modifications non committ√©es (travail en cours)"
      ex1: "Sauvegarder fichiers modifi√©s et index√©s puis restaurer l‚Äô√©tat du dernier commit"
      ex2: "R√©appliquer le dernier stash (reste sauvegard√©)"
      ex3: "R√©appliquer et supprimer le dernier stash"
      ex4: "Afficher la liste de tous les stash"
      ex5: "Cr√©er une branche et y appliquer le dernier stash"
    git_clean:
      desc: "Supprimer d√©finitivement les fichiers non suivis"
      ex1: "Supprimer les fichiers non suivis du r√©pertoire courant"
      ex2: "Supprimer fichiers et dossiers non suivis"
      ex3: "Pr√©visualiser ce qui sera supprim√© (dry run)"

  tags:
    _root:
      title: "üè∑Ô∏è Tags"
    git_tag:
      desc: "Cr√©er, lister ou supprimer des tags pour marquer des points sp√©cifiques (ex. releases)"
      ex1: "Cr√©er un tag annot√© `v1.0` avec message (bon pour releases)"
      ex2: "Supprimer le tag local `v1.0`"
    git_push:
      desc: "Pousser commits, branches et tags du local vers le d√©p√¥t distant"
      ex1: "Pousser tous les tags locaux vers le d√©p√¥t distant"
      ex2: "Pousser un tag sp√©cifique (ex. `v1.0`) vers le d√©p√¥t distant"
      ex3: "Supprimer le tag distant `v1.0`"

  conflicts:
    _root:
      title: "üõ†Ô∏è R√©solution de conflits"
    git_mergetool:
      desc: "Ouvrir un outil visuel pour r√©soudre les conflits de fusion"
      ex1: "Utiliser un outil sp√©cifique (ex. Meld) pour r√©soudre les conflits"
    git_rerere:
      desc: "Permet √† Git de se souvenir de la mani√®re dont vous avez r√©solu des conflits pr√©c√©dents"
      ex1: "Activer la r√©utilisation automatique des r√©solutions de conflits"
      ex2: "Afficher les fichiers avec r√©solutions enregistr√©es"
      ex3: "Afficher les changements sauvegard√©s pour r√©utilisation"

  advanced:
    _root:
      title: "‚öôÔ∏è Commandes avanc√©es"
    git_bisect:
      desc: "Utiliser une recherche binaire pour trouver le commit qui a introduit un bug"
      ex1: "D√©marrer une recherche binaire entre un commit bon et un commit d√©fectueux"
      ex2: "Marquer le commit actuel comme ¬´ mauvais ¬ª"
      ex3: "Marquer un commit comme ¬´ bon ¬ª"
    git_blame:
      desc: "Afficher qui a modifi√© chaque ligne d‚Äôun fichier, avec r√©vision et auteur"
      ex1: "Afficher l‚Äôauteur et le commit pour chaque ligne"
      ex2: "Afficher les infos seulement pour lignes 10 √† 20"
      ex3: "Afficher emails des auteurs avec les changements"
    git_reflog:
      desc: "Afficher et g√©rer le journal des r√©f√©rences (reflog) des branches et HEAD"
      ex1: "Voir o√π pointait la branche `main` il y a une semaine"
      ex2: "Pr√©visualiser les entr√©es du reflog de plus de 30 jours qui peuvent √™tre nettoy√©es"
      ex3: "Supprimer une entr√©e reflog sp√©cifique (‚ö† impact possible sur r√©cup√©ration)"
    git_submodule:
      desc: "Ajouter, initialiser, mettre √† jour ou inspecter des sous-modules"
      ex1: "Ajouter un d√©p√¥t externe comme sous-module"
      ex2: "Initialiser et t√©l√©charger tous les sous-modules"
      ex3: "Lancer `git pull` dans chaque sous-module pour les mettre √† jour"
      ex4: "Synchroniser les URLs des sous-modules apr√®s modification du `.gitmodules`"
      ex5: "Mettre √† jour les sous-modules au dernier commit de leurs branches"
    git_archive:
      desc: "Cr√©er une archive (zip, tar, etc.) des fichiers depuis un commit ou branche sp√©cifique"
      ex1: "Cr√©er une archive ZIP des fichiers du projet √† HEAD"
      ex2: "Cr√©er une archive compress√©e `.tar.gz` depuis HEAD"
      ex3: "Cr√©er une archive `.tar.gz` avec tous les fichiers dans un dossier `project/`"
    git_gc:
      desc: "Nettoyer les fichiers inutiles et optimiser le d√©p√¥t"
      ex1: "Effectuer un nettoyage complet et optimisation (peut √™tre long)"
      ex2: "Supprimer imm√©diatement tous les objets inaccessibles (dangereux si incertain)"
    git_shortlog:
      desc: "R√©sum√© rapide des auteurs et de leurs commits"
      ex1: "Afficher la liste des auteurs avec emails (pour analyser contributions)"
      ex2: "Afficher combien de commits chaque auteur a fait, tri√©s par nombre"
      ex3: "M√™me chose mais avec noms et emails ‚Äî utile pour suivi d√©taill√©"
    git_revert:
      desc: "Cr√©er un nouveau commit qui annule un commit pr√©c√©dent sans r√©√©crire l‚Äôhistorique"
      ex1: "Annuler le dernier commit en cr√©ant un nouveau commit inverse"
      ex2: "Annuler un commit sp√©cifique par son hash"

  gh:
    _root:
      title: "üêô GitHub CLI"
      note: "`gh` vous permet de g√©rer GitHub depuis le terminal."
    gh_auth_login:
      desc: "S‚Äôauthentifier aupr√®s d‚Äôun h√¥te GitHub pour permettre aux commandes CLI d‚Äôinteragir avec votre compte"
      ex1: "S‚Äôauthentifier avec un jeton d‚Äôacc√®s personnel stock√© dans un fichier (`mytoken.txt`)"
      ex2: "S‚Äôauthentifier aupr√®s d‚Äôun serveur GitHub Enterprise (autre que github.com)"
    gh_repo_clone:
      desc: "Cloner un d√©p√¥t GitHub sur votre machine locale"
      ex1: "Cloner le d√©p√¥t `repo` appartenant √† `user` dans un dossier nomm√© `repo`"
      ex2: "Cloner le d√©p√¥t mais ne t√©l√©charger que le dernier commit pour un clone plus rapide et plus l√©ger"
      ex3: "Cloner le d√©p√¥t dans un dossier personnalis√© `workspace/cli`"
    gh_issue_list:
      desc: "Lister les issues d‚Äôun d√©p√¥t GitHub, √©ventuellement filtr√©es par diff√©rents crit√®res"
      ex1: "Lister les issues qui vous sont assign√©es"
      ex2: "Lister toutes les issues, quel que soit leur √©tat (ouvertes ou ferm√©es)"
      ex3: "Lister les issues correspondant √† ¬´ error ¬ª, non assign√©es, tri√©es par date de cr√©ation croissante"
    gh_pr_create:
      desc: "Cr√©er une pull request sur GitHub via la CLI"
      ex1: "Cr√©er une pull request avec un titre donn√©"
      ex2: "Lier la pull request √† un projet GitHub nomm√© ¬´ Roadmap ¬ª"
      ex3: "Cr√©er une PR depuis la branche `feature` du fork `monalisa` vers la branche `develop`"
    gh_repo_create:
      desc: "Cr√©er un nouveau d√©p√¥t GitHub depuis la CLI"
      ex1: "Cr√©er un nouveau d√©p√¥t appel√© `my-project` sur GitHub (avec invites interactives)"
      ex2: "Cr√©er un d√©p√¥t public et le cloner localement"
      ex3: "Cr√©er un d√©p√¥t priv√© distant depuis le dossier courant et ajouter un remote nomm√© `upstream`"

  aliases:
    _root:
      title: "üí° Alias Git (raccourcis utiles)"
      intro: "Configurer des alias pratiques pour acc√©l√©rer l‚Äôex√©cution des commandes Git fr√©quentes :"

  pro:
    _root:
      title: "üöÄ Commandes Git avanc√©es pour professionnels"
    git_filter_repo:
      desc: "Un outil puissant et performant pour r√©√©crire l‚Äôhistorique Git afin de supprimer ou modifier des fichiers, l‚Äôauteur ou des chemins ; remplace `git filter-branch` avec plus de rapidit√© et de s√©curit√©"
      ex1: "R√©√©crire efficacement l‚Äôhistorique pour supprimer des fichiers ou dossiers sensibles sans les probl√®mes de performance de `git filter-branch`. √Ä utiliser avec pr√©caution"
      ex2: "Remplacer en masse des cha√Ænes ou motifs dans tout l‚Äôhistorique (ex. assainir des identifiants)"
      ex3: "Extraire l‚Äôhistorique d‚Äôun sous-r√©pertoire dans un nouveau d√©p√¥t en conservant les m√©tadonn√©es de commits"
    git_worktree:
      desc: "G√©rer plusieurs arborescences de travail li√©es √† un seul d√©p√¥t, permettant de travailler en parall√®le sur diff√©rentes branches sans cloner"
      ex1: "Cr√©er une arborescence de travail suppl√©mentaire attach√©e au m√™me d√©p√¥t pour pouvoir checkout plusieurs branches en parall√®le"
      ex2: "Lister toutes les worktrees actives, leurs chemins et branches associ√©es"
      ex3: "Supprimer une worktree lorsqu‚Äôelle n‚Äôest plus n√©cessaire, en nettoyant les dossiers en toute s√©curit√©"
    git_replace:
      desc: "Cr√©er des r√©f√©rences temporaires qui remplacent des objets existants, permettant une manipulation locale et non destructive de l‚Äôhistorique"
      ex1: "√âchanger temporairement un commit par un autre dans votre d√©p√¥t local, utile pour tester ou patcher l‚Äôhistorique sans le r√©√©crire"
      ex2: "Afficher toutes les r√©f√©rences de remplacement actives"
      ex3: "Supprimer une r√©f√©rence de remplacement sp√©cifique pour r√©tablir le comportement"
    git_stash_adv:
      desc: "Sauvegarder temporairement les modifications non committ√©es dans une pile, permettant de changer de contexte sans committer du travail en cours"
      ex1: "S√©lectionner de mani√®re interactive des blocs de changements √† mettre en stash"
      ex2: "Cr√©er un stash avec un message personnalis√© pour une identification plus facile"
      ex3: "Appliquer un stash sp√©cifique de la liste sans le supprimer"
    git_rebase_adv:
      desc: "Rejouer les commits sur une nouvelle base, facilitant un historique lin√©aire plus propre et l‚Äô√©dition interactive de l‚Äôhistorique"
      ex1: "D√©marrer un rebase interactif qui r√©ordonne et fusionne automatiquement les commits marqu√©s fixup/squash"
      ex2: "R√©ordonner et fusionner automatiquement les commits fixup/squash avant de pousser"
      ex3: "Cr√©er un commit fixup qui sera fusionn√© automatiquement lors du rebase interactif"
      ex4: "Cr√©er un commit squash √† combiner avec un commit sp√©cifi√© lors du rebase"
    git_bisect_pro:
      desc: "Outil de recherche binaire pour identifier efficacement le commit qui a introduit un bug en testant successivement les commits"
      ex1: "Automatiser le bisect en lan√ßant un script de test sur chaque commit"
      ex2: "Automatiser la recherche avec un script de test pour acc√©l√©rer l‚Äôidentification du bug"
      ex3: "Ouvrir un outil graphique pour visualiser le processus de bisect"
      ex4: "Quitter le mode bisect et revenir au HEAD original"
    git_commit_pro:
      desc: "Enregistrer des modifications avec options d√©taill√©es (amend, signature, fixup, personnalisation du message) pour maintenir un historique de qualit√©"
      ex1: "Cr√©er un commit sign√© avec votre cl√© GPG pour garantir authenticit√© et auteur"
      ex2: "Signer cryptographiquement vos commits avec votre cl√© GPG"
      ex3: "Configurer globalement la cl√© GPG utilis√©e pour signer les commits"
      ex4: "V√©rifier et afficher les infos de signature GPG des commits"
    git_reflog_pro:
      desc: "Garder un journal des mises √† jour de HEAD et des branches, essentiel pour r√©cup√©rer des commits perdus"
      ex1: "R√©initialiser la branche courante √† un √©tat pr√©c√©dent depuis le reflog"
      ex2: "Expirer imm√©diatement toutes les entr√©es du reflog (‚ö† √† utiliser avec prudence)"

  pro_tips:
    _root:
      title: "üß∞ Conseils de flux de travail et automatisation pour pros"
    columns:
      topic: "Sujet"
      commands_example: "Commandes / Exemple"
      explanation_tips: "Explication & Conseils Pro"
    aggressive_cleanup:
      topic: "Nettoyage agressif du d√©p√¥t"
      desc: "Effectue un garbage collection profond et supprime imm√©diatement les objets inaccessibles pour optimiser le d√©p√¥t. √Ä utiliser pendant des maintenances"
    parallel_worktrees:
      topic: "Worktrees de branches parall√®les"
      desc: "Conserver plusieurs arborescences de travail pour d√©velopper plusieurs fonctionnalit√©s en parall√®le, sans co√ªt de clone"
    linear_history:
      topic: "Historique lin√©aire propre"
      desc: "Avant de pousser, faire un rebase interactif avec autosquash pour garder un historique clair"
    secure_commits:
      topic: "Commits s√©curis√©s"
      desc: "Signer les commits avec GPG pour renforcer la confiance dans les d√©p√¥ts partag√©s"
    automated_bisect:
      topic: "Bisect automatis√©"
      desc: "Automatiser la chasse aux bugs avec un script de test ex√©cut√© sur chaque commit"
    conflict_cache:
      topic: "Cache de r√©solution de conflits"
      desc: "Activer la r√©utilisation des r√©solutions de conflits pour acc√©l√©rer les r√©solutions r√©p√©t√©es"
    shared_aliases_hooks:
      topic: "Alias et hooks partag√©s"
      desc: "Stocker des alias Git et hooks communs dans un d√©p√¥t partag√© ou un pipeline CI pour uniformiser les pratiques d‚Äô√©quipe"

  resources:
    _root:
      title: "Ressources suppl√©mentaires"
    tip:
      title: "üß† **Astuce**"
      desc: "N‚Äôessayez pas de tout m√©moriser. Utilisez `--help`, explorez, et pratiquez r√©guli√®rement :"
    links:
      title: "üåê Liens utiles"
      official_docs: "üìò **Documentation officielle Git** ‚Äî manuel d√©taill√© de toutes les commandes Git :"
      learn_branching: "üìô **Learn Git Branching** ‚Äî tutoriel interactif visuel pour ma√Ætriser les branches :"
      pro_git_book: "üìï **Livre Pro Git** (gratuit, par Scott Chacon & Ben Straub) :"
      official_cheatsheet: "üìó **Git Cheatsheet** (r√©f√©rence officielle concise) :"
