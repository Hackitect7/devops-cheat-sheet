docker:
  meta:
    _root:
      title: "🐳 دوكر"
      desc: "📘 دوكر هو منصة لتشغيل التطبيقات في حاويات معزولة. تحتوي هذه الورقة المرجعية على أوامر للعمل مع الصور، الحاويات، الشبكات، وحدات التخزين، بالإضافة إلى Docker Compose و Swarm."

  basic:
    _root:
      title: "📦 الأوامر الأساسية"
    docker:
      desc: "الأمر الرئيسي لسطر أوامر Docker المستخدم لتشغيل الأوامر الفرعية وإدارة الحاويات والصور والشبكات والتخزين"
    docker_version:
      desc: "عرض إصدار Docker المثبت (العميل والخادم). مفيد للتحقق من التثبيت"
      ex1: "عرض إصدار API للعميل فقط"
      ex2: "عرض إصدار الخادم (Engine) فقط"
      ex3: "إخراج معلومات الإصدار بالكامل بتنسيق JSON"
    docker_system_info:
      desc: "عرض معلومات النظام العامة: عدد الحاويات، الصور، الموارد"
      ex1: "عرض بيانات Docker: الإصدارات، الشبكات، عدد الحاويات والصور"
      ex2: "إخراج المعلومات بتنسيق JSON — مفيد للأتمتة"
      ex3: "عرض عدد وحدات المعالجة والذاكرة الكلية"
      ex4: "عرض برنامج التخزين المستخدم من Docker"
    docker_image_pull:
      desc: "تحميل صورة من Docker Hub أو سجل آخر. لا يمكن تشغيل الحاويات بدون صور"
      ex1: "تحميل أحدث صورة Ubuntu"
      ex2: "تحميل صورة Nginx خفيفة مبنية على Alpine"
      ex3: "تحميل صورة Redis الإصدار 7"
    docker_container_run:
      desc: "إنشاء وتشغيل حاوية جديدة من صورة"
      ex1: "تشغيل Ubuntu مع طرفية Bash تفاعلية"
      ex2: "تشغيل Nginx في الوضع المنفصل (الخلفية)"
      ex3: "تشغيل Nginx وربط منفذ 80 في الحاوية مع منفذ 8080 على المضيف"
    docker_container_ls:
      desc: "إدراج الحاويات قيد التشغيل"
      ex1: "عرض الحاويات قيد التشغيل فقط"
      ex2: "عرض جميع الحاويات بما في ذلك المتوقفة"
      ex3: "إخراج أسماء الحاويات فقط"
    docker_container_start:
      desc: "بدء تشغيل حاويات متوقفة"
      ex1: "بدء حاوية بالاسم"
      ex2: "بدء جميع الحاويات"
      ex3: "بدء حاوية مع إرفاق طرفية تفاعلية"
    docker_container_stop:
      desc: "إيقاف تشغيل حاوية قيد التشغيل"
      ex1: "إيقاف حاوية بالاسم"
      ex2: "إيقاف جميع الحاويات قيد التشغيل"
      ex3: "إيقاف حاوية ومنحها 5 ثوانٍ لإنهاء العمليات"
    docker_container_restart:
      desc: "إعادة تشغيل حاوية"
      ex1: "إعادة تشغيل حاوية محددة"
      ex2: "إعادة تشغيل جميع الحاويات قيد التشغيل"
      ex3: "إعادة تشغيل حاوية مع تأخير 10 ثوانٍ"
    docker_container_rm:
      desc: "إزالة حاوية"
      ex1: "إزالة حاوية متوقفة محددة"
      ex2: "إزالة جميع الحاويات المتوقفة"
      ex3: "إجبار إزالة حاوية قيد التشغيل"
    docker_image_ls:
      desc: "إدراج الصور التي تم تحميلها"
      ex1: "عرض جميع الصور على المضيف"
      ex2: "عرض جميع الصور بما في ذلك الطبقات الوسيطة"
      ex3: "إخراج أسماء الصور والعلامات فقط"
    docker_image_rm:
      desc: "إزالة صورة أو أكثر من التخزين المحلي"
      ex1: "إزالة صورة بعلامة `latest` من المستودع `test1`"
      ex2: "إزالة صورة باستخدام معرفها"
      ex3: "إزالة جميع الصور (بحذر!)"

  container:
    _root:
      title: "🔁 إدارة الحاويات"
    docker_container_exec:
      desc: "تشغيل أمر داخل حاوية قيد التشغيل"
      ex1: "تشغيل طرفية bash تفاعلية داخل الحاوية المسماة `container`"
      ex2: "تنفيذ أمر `ls` في مجلد `/app` داخل الحاوية"
      ex3: "تشغيل أمر في الحاوية في وضع الخلفية بدون انتظار"
    docker_container_logs:
      desc: "عرض سجلات الحاويات"
      ex1: "عرض جميع السجلات من الحاوية `container`"
      ex2: "متابعة السجلات في الوقت الفعلي"
      ex3: "عرض آخر 50 سطرًا من السجلات"
    docker_inspect:
      desc: "استرجاع معلومات JSON تفصيلية عن حاوية أو صورة"
      ex1: "عرض تفاصيل الحاوية `container`"
      ex2: "عرض عنوان IP للحاوية"
    docker_container_stats:
      desc: "عرض إحصاءات استخدام الموارد في الوقت الفعلي"
      ex1: "عرض CPU، الذاكرة، الشبكة والقرص لجميع الحاويات"
      ex2: "عرض الإحصاءات لحاوية محددة فقط"
      ex3: "عرض لقطة واحدة من الإحصاءات والخروج"
    docker_container_rename:
      desc: "إعادة تسمية حاوية"
      ex1: "إعادة تسمية حاوية من `old_name` إلى `new_name`"
    docker_container_cp:
      desc: "نسخ الملفات بين الحاوية والمضيف"
      ex1: "نسخ ملف من الحاوية إلى مجلد المضيف الحالي"
      ex2: "نسخ ملف من المضيف إلى الحاوية"
      ex3: "بث ملف سجل من الحاوية وتصفيته بخطوط تحتوي \"ERROR\" بدون حفظه"
    docker_container_top:
      desc: "عرض العمليات الجارية داخل الحاوية"
      ex1: "عرض العمليات للحاوية المسماة `container`"
    docker_container_pause:
      desc: "إيقاف جميع العمليات مؤقتًا في الحاوية"
      ex1: "إيقاف الحاوية `container` مؤقتًا"
    docker_container_unpause:
      desc: "استئناف حاوية موقوفة"
      ex1: "استئناف الحاوية `container`"
    docker_container_update:
      desc: "تحديث إعدادات الحاوية بدون إعادة تشغيل"
      ex1: "تقييد استخدام الذاكرة في الحاوية إلى 500 ميغابايت"

  images:
    _root:
      title: "🧱 الصور و Dockerfile"
    docker_buildx_build:
      desc: "بناء صورة Docker من Dockerfile"
      ex1: "بناء صورة بعلامة `my_image` من المجلد الحالي"
      ex2: "بناء صورة بعلامة الإصدار `1.0`"
      ex3: "بناء صورة بدون استخدام ذاكرة التخزين المؤقت لبناء نظيف"
    docker_container_commit:
      desc: "إنشاء صورة من الحالة الحالية لحاوية"
      ex1: "إنشاء صورة `my_img` بعلامة `v1` من الحاوية `container`"
      ex2: "إنشاء صورة مع رسالة commit"
      ex3: "إنشاء صورة مع تحديد المؤلف"
    docker_image_tag:
      desc: "إضافة أو تغيير علامة لصورة"
      ex1: "إضافة علامة لدفعها إلى المستودع `myrepo`"
      ex2: "إنشاء علامة `stable` للصورة ذات العلامة `1.0`"
      ex3: "إضافة علامة `backup` لصورة محلية"
    docker_image_push:
      desc: "دفع صورة إلى Docker Hub أو سجل آخر"
      ex1: "دفع صورة بعلامة `latest` إلى المستودع `myrepo`"
      ex2: "دفع صورة بعلامة `1.0`"
      ex3: "دفع صورة مع العلامة الافتراضية `latest`"
    docker_login:
      desc: "تسجيل الدخول إلى Docker Hub أو سجل آخر"
      ex1: "إدخال اسم المستخدم وكلمة المرور بشكل تفاعلي"
      ex2: "تسجيل الدخول إلى سجل خاص"
      ex3: "تسجيل الدخول باسم مستخدم وكلمة مرور (غير مستحسن)"
    docker_logout:
      desc: "تسجيل الخروج من Docker Hub أو سجل آخر"
      ex1: "تسجيل الخروج من Docker Hub"
      ex2: "تسجيل الخروج من سجل خاص"
    healthcheck:
      desc: "تعليمة في Dockerfile للتحقق تلقائيًا من صحة الحاوية"
      ex1: "إضافة فحص صحة للتحقق من الخدمة كل 30 ثانية"
      ex2: "التحقق من حالة الصحة لحاوية قيد التشغيل"

  networks:
    _root:
      title: "🔌 الشبكات والتخزين"
    docker_network_ls:
      desc: "إدراج جميع شبكات Docker"
      ex1: "عرض جميع الشبكات التي تم إنشاؤها"
      ex2: "عرض الشبكات التي تستخدم السائق `bridge` فقط"
      ex3: "عرض أسماء الشبكات فقط"
    docker_network_create:
      desc: "إنشاء شبكة جديدة"
      ex1: "إنشاء شبكة باسم `my_net` بالإعدادات الافتراضية"
      ex2: "إنشاء شبكة باستخدام السائق `bridge`"
      ex3: "إنشاء شبكة مع نطاق IP محدد"
    docker_network_connect:
      desc: "توصيل حاوية بشبكة"
      ex1: "توصيل الحاوية `container` بالشبكة `my_net`"
      ex2: "توصيل مع اسم مستعار `db_net`"
    docker_network_disconnect:
      desc: "فصل حاوية عن شبكة"
      ex1: "فصل الحاوية `container` عن الشبكة `my_net`"
    docker_volume_ls:
      desc: "إدراج جميع وحدات تخزين Docker"
      ex1: "عرض جميع وحدات التخزين"
      ex2: "عرض الوحدات غير المستخدمة"
    docker_volume_create:
      desc: "إنشاء وحدة تخزين جديدة"
      ex1: "إنشاء وحدة تخزين باسم `my_vol`"
      ex2: "إنشاء وحدة تخزين مؤقتة باستخدام tmpfs"
    docker_volume_inspect:
      desc: "عرض معلومات تفصيلية عن وحدة تخزين"
      ex1: "عرض تفاصيل وحدة التخزين `my_vol` بتنسيق JSON"
    docker_volume_rm:
      desc: "إزالة وحدة تخزين أو أكثر"
      ex1: "إزالة وحدة التخزين `my_vol`"
      ex2: "إزالة جميع الوحدات غير المستخدمة"

  plugins:
    _root:
      title: "🧩 إضافات دوكر"
    docker_plugin_ls:
      desc: "إدراج إضافات Docker المثبتة"
      ex1: "عرض جميع الإضافات وحالتها"
    docker_plugin_install:
      desc: "تثبيت إضافة من السجل"
      ex1: "تثبيت إضافة التخزين SSHFS"
      ex2: "تثبيت إضافة الشبكة Weave"
    docker_plugin_disable:
      desc: "تعطيل إضافة مثبتة"
      ex1: "تعطيل إضافة SSHFS"
    docker_plugin_enable:
      desc: "تمكين إضافة معطلة مسبقًا"
      ex1: "تمكين إضافة SSHFS"
    docker_plugin_rm:
      desc: "إزالة إضافة Docker"
      ex1: "إزالة إضافة SSHFS"

  compose:
    _root:
      title: "📋 دوكر كومبوز"
    docker_compose_up:
      desc: "بدء الحاويات المعرفة في `docker-compose.yml`"
      ex1: "بدء جميع الخدمات في المجلد الحالي في الوضع التفاعلي"
      ex2: "بدء الخدمات في الوضع المنفصل (الخلفية)"
      ex3: "بناء الصور قبل بدء الخدمات"
    docker_compose_down:
      desc: "إيقاف وإزالة الحاويات والشبكات ووحدات التخزين التي تم إنشاؤها بواسطة `up`"
      ex1: "إيقاف جميع الخدمات وإزالة الموارد المرتبطة"
      ex2: "إزالة وحدات التخزين التي أنشأها Compose أيضًا"
      ex3: "إزالة الصور التي أنشأها Compose أيضًا"
    docker_compose_logs:
      desc: "عرض سجلات جميع الخدمات أو خدمات محددة"
      ex1: "عرض سجلات جميع الخدمات"
      ex2: "متابعة السجلات في الوقت الفعلي"
      ex3: "عرض سجلات الخدمة `web` فقط"
    docker_compose_exec:
      desc: "تشغيل أمر داخل حاوية خدمة قيد التشغيل"
      ex1: "دخول صدفة bash تفاعلية داخل حاوية الخدمة `web`"
      ex2: "تشغيل أمر `ls` داخل حاوية قاعدة البيانات"
      ex3: "تشغيل أمر داخل حاوية `worker` في الوضع المنفصل"
    docker_compose_build:
      desc: "بناء أو إعادة بناء صور الخدمات"
      ex1: "بناء جميع الصور المعرفة في `docker-compose.yml`"
      ex2: "بناء صورة خدمة `web` فقط"
      ex3: "بناء الصور بدون استخدام الكاش"
    docker_compose_ps:
      desc: "عرض حالة جميع الخدمات والحاويات"
      ex1: "عرض جميع الحاويات بما في ذلك المتوقفة"
      ex2: "عرض أسماء الخدمات فقط"
    docker_compose_pull:
      desc: "تحميل/تحديث صور الخدمات من السجل"
      ex1: "تحميل صورة خدمة `web` فقط"
      ex2: "الاستمرار في التحميل حتى إذا فشلت بعض الصور"
    docker_compose_restart:
      desc: "إعادة تشغيل جميع الخدمات أو خدمات محددة"
      ex1: "إعادة تشغيل خدمة `db` فقط"
      ex2: "إعادة تشغيل الخدمات بمهلة 10 ثوانٍ"
    docker_compose_config:
      desc: "عرض التكوين النهائي لـ Compose بتنسيق YAML"
      ex1: "إدراج جميع الخدمات في التكوين"
      ex2: "إدراج جميع وحدات التخزين المعرفة في التكوين"
    docker_compose_start:
      desc: "بدء الخدمات المتوقفة بدون إعادة إنشاء الحاويات"
      ex1: "بدء خدمة `web`"
      ex2: "بدء عدة خدمات في وقت واحد"
    docker_compose_stop:
      desc: "إيقاف الخدمات بدون إزالة الحاويات"
      ex1: "إيقاف خدمة `web`"
      ex2: "إيقاف الخدمات بمهلة 5 ثوانٍ"

  export_import:
    _root:
      title: "📤 التصدير والاستيراد"
    docker_image_save:
      desc: "حفظ صورة أو أكثر إلى أرشيف tar للاستيراد أو النقل لاحقًا"
      ex1: "حفظ صورة Docker إلى ملف tar"
      ex2: "طريقة بديلة لحفظ صورة إلى ملف"
      ex3: "حفظ صورة Redis محددة إلى ملف"
    docker_image_load:
      desc: "تحميل صور Docker من أرشيف tar محفوظ مسبقًا"
      ex1: "تحميل صورة Docker من ملف tar"
      ex2: "تحميل صورة بتحديد الملف عبر وسيط"
      ex3: "تحميل صورة بدون إخراج تقدم"
    docker_container_export:
      desc: "تصدير نظام ملفات الحاوية كأرشيف tar بدون تاريخ الصورة أو البيانات الوصفية"
      ex1: "تصدير نظام ملفات الحاوية إلى أرشيف"
      ex2: "تصدير حاوية بالاسم"
      ex3: "تصدير باستخدام معرف الحاوية مع الخيار `-o`"
    docker_image_import:
      desc: "إنشاء صورة جديدة من أرشيف نظام ملفات"
      ex1: "استيراد ملف أرشيف كصورة Docker جديدة"
      ex2: "استيراد صورة مباشرة من URL"
      ex3: "استيراد من الإدخال القياسي"

  cleanup:
    _root:
      title: "🧹 التنظيف والتشخيص"
    docker_system_df:
      desc: "عرض استخدام مساحة Docker: وحدات التخزين، الصور، الحاويات، وذاكرة التخزين المؤقت للبناء"
      ex1: "إخراج تفصيلي لكل صورة وحاوية ووحدة تخزين"
      ex2: "إخراج المعلومات بتنسيق JSON"
    docker_system_prune:
      desc: "إزالة جميع بيانات Docker غير المستخدمة: الحاويات المتوقفة، الشبكات غير المستخدمة، الصور المعلقة، وذاكرة التخزين المؤقت"
      ex1: "إزالة الصور غير المستخدمة بما في ذلك الوسيطة"
      ex2: "إزالة وحدات التخزين غير المستخدمة أيضًا"
    docker_image_prune:
      desc: "إزالة الصور غير المستخدمة بما في ذلك الطبقات المعلقة"
      ex1: "إزالة جميع الصور غير المستخدمة"
      ex2: "إزالة الصور الأقدم من 24 ساعة"
    docker_container_prune:
      desc: "إزالة الحاويات المتوقفة حسب المرشحات أو جميعها إذا لم يتم تحديد أي منها"
      ex1: "إزالة الحاويات المتوقفة الأقدم من 24 ساعة"
      ex2: "إزالة بدون مطالبة بالتأكيد"

  swarm:
    _root:
      title: "🐝 دوكر سوارم"
    docker_swarm_init:
      desc: "تهيئة عنقود Swarm جديد على العقدة الحالية"
      ex1: "تهيئة العنقود مع تحديد عنوان IP"
      ex2: "تهيئة مع منفذ استماع محدد"
    docker_service_create:
      desc: "إنشاء خدمة جديدة في العنقود"
      ex1: "إنشاء خدمة Nginx في Swarm"
      ex2: "إنشاء خدمة مع 3 نسخ"
      ex3: "إنشاء خدمة مع تعيين منفذ"
    docker_stack_deploy:
      desc: "نشر حزمة خدمات إلى العنقود بناءً على ملف Compose"
      ex1: "نشر الحزمة من ملف compose"
      ex2: "النشر مع إعادة توجيه مصادقة السجل"
      ex3: "استخدام ملف compose بديل للحزمة"
    docker_stack_rm:
      desc: "إزالة حزمة أو أكثر من العنقود"
      ex1: "إزالة الحزمة `mystack`"
      ex2: "إزالة جميع الحزم (غير مستحسن)"
      ex3: "إزالة الحزمة والخروج من Swarm"

  advanced_docker:
    _root:
      title: "💼 استخدام دوكر المتقدم"

    prof:
      title: "🚀 أوامر دوكر الاحترافية"
      docker_buildx:
        desc: "أداة بناء صور متقدمة بديلة لـ `docker build`. تدعم المنصات المتعددة، الكاش، البناء المتوازي، والتصدير لتنسيقات متعددة. مفيدة لـ CI/CD والتطوير متعدد المنصات"
        ex1: "بناء صورة متعددة المنصات (ARM و x86 في آن واحد)"
        ex2: "بناء صورة وتحميلها إلى كاش Docker المحلي"
        ex3: "بناء ودفع صورة متعددة المنصات إلى السجل"
      docker_context:
        desc: "إدارة سياقات Docker للعمل مع بيئات محلية وبعيدة. تتيح التبديل السريع بين محركات Docker"
        ex1: "إنشاء سياق للاتصال بمضيف بعيد"
        ex2: "التبديل إلى السياق البعيد"
        ex3: "إدراج السياقات المتاحة والنشط منها"
      docker_system_events:
        desc: "الاستماع لأحداث Docker في الوقت الفعلي مع تصفية حسب نوع الحدث (مثل بدء الحاوية). مفيد للمراقبة والأتمتة"
        ex1: "عرض أحداث بدء الحاويات فقط"
        ex2: "عرض الأحداث من الساعة الماضية حتى 10 دقائق مضت"
        ex3: "عرض الأحداث المتعلقة بالشبكات فقط"
        ex4: "عرض الأحداث المرتبطة بصورة `nginx`"
      docker_container_update:
        desc: "تغيير حدود الموارد وإعدادات حاوية قيد التشغيل بدون إعادة تشغيلها"
        ex1: "تعيين الحد إلى 2 CPU و1 جيجابايت RAM"
        ex2: "تعيين سياسة إعادة التشغيل `unless-stopped`"
        ex3: "تقييد عدد العمليات إلى 200"
      docker_container_diff:
        desc: "عرض تغييرات نظام الملفات في الحاوية مقارنة بالصورة الأصلية. مفيد للتصحيح والتدقيق"
        ex1: "عرض جميع تغييرات نظام الملفات في الحاوية"
        ex2: "عرض الملفات المضافة فقط (`A` — Added)"
      docker_image_history:
        desc: "عرض تاريخ طبقات الصورة: أوامر البناء، حجم كل طبقة، ووقت الإنشاء. مفيد للتحسين والتدقيق"
        ex1: "عرض تاريخ الطبقات لصورة"
        ex2: "عرض أوامر البناء كاملة بدون اختصار"
        ex3: "إخراج أوامر البناء وأحجام الطبقات فقط"

    practices:
      title: "🛠 ممارسات دوكر المفيدة والأتمتة"
      minimize_image_size:
        title: "تقليل حجم الصورة"
        p1: "استخدم صور أساسية مثل `alpine` أو `scratch` للحصول على حجم صغير."
        p2: "لدمج الطبقات، استخدم `--squash` أثناء البناء (يتطلب تفعيل الميزات التجريبية)."
        p3: "أيضًا، أزل الملفات المؤقتة والكاش في طبقة واحدة:"
      minimize_layers:
        title: "تقليل عدد الطبقات"
        p1: "ادمج الأوامر في `RUN` واحد لتقليل الطبقات وحجم الصورة النهائي:"
      optimize_build:
        title: "تحسين بناء Dockerfile"
        p1: "استخدم البناء متعدد المراحل بحيث تبقى الملفات الضرورية فقط في الصورة النهائية."
        p2: "انسخ وثبّت التبعيات أولاً، ثم انسخ الكود — هذا يحسّن الكاش ويُسرّع إعادة البناء."
      secrets_and_configs:
        title: "فصل الأسرار والإعدادات"
        p1: "لا تخزن ملفات `.env` أو مفاتيح API أو الشهادات الخاصة داخل الصورة."
        intro: "استخدم للتكوين:"
        items:
          secret: "`docker secret` (في Swarm)"
          env: "متغيرات البيئة (`-e VAR=value` أو `.env`)"
          volumes: "وحدات تخزين خارجية للإعدادات"
      buildkit_secrets:
        title: "أسرار وقت البناء (BuildKit)"
        p1: "لتمرير الأسرار بأمان أثناء البناء، استخدم الخيار `--secret`:"
        p2: "في Dockerfile، السر متاح في `/run/secrets/mysecret`:"
        note: "🛡 يمنع هذا تخزين الأسرار في طبقات الصورة."
      rootless:
        title: "دوكر بدون صلاحيات root"
        p1: "تشغيل Docker بدون حقوق root يحسن الأمان ويقلل مخاطر الاختراق."
        steps_intro: "للتفعيل:"
        check_intro: "تحقق:"
        warning: "⚠ بعض الميزات (مثل إعادة توجيه المنافذ <1024) لن تكون متاحة."
      scan:
        title: "فحص الصور بحثًا عن الثغرات"
        p1: "استخدم الأدوات المدمجة:"
        p2: "أو CLI الجديد:"
        p3: "يساعد هذا في اكتشاف الثغرات في الصور الأساسية والتبعيات."
      resource_limits:
        title: "مراقبة استخدام الموارد"
        p1: "حدد الحاويات بالذاكرة، وحدة المعالجة، وعدد العمليات:"
        p2: "يمنع هذا استهلاك الموارد المفرط."
        p3: "يمكنك أيضًا تقييد الإدخال/الإخراج:"
        p4: "مفيد للحاويات التي لا يجب أن تفرط في استهلاك القرص."
      cleanup:
        title: "التنظيف التلقائي"
        p1: "قم بإزالة الصور والحاويات ووحدات التخزين والشبكات غير المستخدمة بانتظام:"
        warning: "⚠ احذر: هذا الأمر يحذف جميع الموارد غير المستخدمة."
        p2: "للتنظيف الانتقائي استخدم:"
      cicd:
        title: "تكامل CI/CD"
        p1: "ادمج البناء، الاختبار، والنشر في GitHub Actions وGitLab CI وJenkins."
        example_intro: "مثال خطوة في GitHub Actions:"
      logging:
        title: "التسجيل والمراقبة"
        p1: "أرفق برامج تسجيل (`--log-driver`) بأنظمة مركزية: ELK، Loki، Splunk."
        p2: "استخدم Prometheus + cAdvisor لقياسات الحاويات."
      production:
        title: "النشر في بيئة الإنتاج"
        p1: "افصل الإعدادات للتطوير والإنتاج باستخدام `docker-compose.override.yml`."
        ha_intro: "للتوافر العالي والتوسيع استخدم:"
        items:
          swarm: "دوكر سوارم"
          k8s: "كوبرنيتس"

    debugging:
      title: "🐞 تصحيح وتتبع أداء حاويات دوكر"
      exec:
        group_desc: "تشغيل أمر داخل حاوية قيد التشغيل، مع توفير وصول تفاعلي أو إمكانية تشغيل عمليات في بيئة الحاوية المعزولة"
        r1: "بدء طرفية تفاعلية (bash) داخل حاوية قيد التشغيل"
        r2: "بدء صدفة بسيطة داخل الحاوية (إذا لم يتوفر bash)"
        r3: "تشغيل أمر داخل الحاوية بدون وضع تفاعلي"
      logs:
        group_desc: "عرض سجلات الحاوية المحددة، لتمكين مشاهدة المخرجات والأحداث المرتبطة بعملها للتشخيص والمراقبة"
        r1: "عرض آخر 100 سطر من السجلات مع البث في الوقت الحقيقي"
        r2: "عرض جميع السجلات المتاحة للحاوية"
        r3: "عرض السجلات من الساعة الماضية"
      inspect:
        group_desc: "إخراج معلومات تفصيلية حول كائن دوكر (حاوية، صورة، شبكة، إلخ) بتنسيق JSON بما في ذلك التهيئة والحالة"
        r1: "الحصول على معلومات JSON كاملة عن الحاوية"
        r2: "عرض PID للعملية الرئيسية للحاوية على المضيف"
        r3: "عرض عنوان IP للحاوية"
      nsenter:
        group_desc: "أداة لينكس للدخول إلى مساحات الأسماء لعملية أخرى (هنا الحاوية). تُستخدم مع `strace` لتتبع استدعاءات النظام داخل الحاوية"
        r1: "دخول مساحات أسماء الحاوية وتتبع استدعاءات العملية 1"
        r2: "فتح صدفة bash داخل مساحات أسماء الحاوية"
        r3: "عرض المنافذ المفتوحة داخل الحاوية"
      tcpdump:
        group_desc: "أداة سطر أوامر لالتقاط وتحليل حركة مرور الشبكة. تُستخدم داخل الحاوية لتشخيص مشاكل الشبكة وتحليل الحزم ومراقبة الاتصالات"
        r1: "التقاط وتحليل حركة المرور داخل الحاوية"
        r2: "التقاط الحركة على المنفذ 80 فقط"
        r3: "حفظ الحركة في ملف لتحليلها لاحقًا"
      stats:
        group_desc: "عرض مقاييس استخدام الموارد الحالية (CPU، الذاكرة، الشبكة، القرص) لحاوية أو أكثر في الوقت الفعلي"
        r1: "عرض استخدام CPU والذاكرة والشبكة والقرص في الوقت الفعلي للحاوية"
        r2: "عرض الإحصاءات لجميع الحاويات"
        r3: "إخراج الإحصاءات مرة واحدة والخروج"
      top:
        group_desc: "عرض قائمة العمليات الجارية داخل الحاوية، مشابهة لـ `ps` في لينكس لتحليل نشاط الحاوية"
        r1: "عرض العمليات الجارية داخل الحاوية"
        r2: "استخدام صيغة إخراج بديلة مثل `ps aux`"
        r3: "عرض PID والأمر فقط للعمليات"
      diff:
        group_desc: "عرض التغييرات في نظام ملفات الحاوية مقارنة بالصورة الأساسية، بما في ذلك الملفات المضافة أو المعدلة أو المحذوفة"
        r1: "عرض تغييرات نظام الملفات في الحاوية مقارنة بالصورة الأساسية"
        r2: "عرض الملفات المضافة فقط (`A` — Added)"
        r3: "عرض الملفات المعدلة فقط (`C` — Changed)"
      cp:
        group_desc: "نسخ الملفات والمجلدات بين الحاوية والمضيف، لتمكين تبادل البيانات والنسخ الاحتياطي"
        r1: "نسخ ملف من الحاوية إلى المضيف"
        r2: "نسخ ملف من المضيف إلى الحاوية"
        r3: "نسخ ملف سجل وتصفيته لأسطر الأخطاء بدون حفظه على القرص"
      advanced_note: "💡 للتصحيح المتقدم يمكنك استخدام `nsenter` و `strace` و `tcpdump` و `gdb` وأدوات منخفضة المستوى الأخرى."

  compose_adv:
    _root:
      title: "💼 الاستخدام المتقدم لـ Docker Compose"
    prof:
      title: "🚀 أوامر دوكر كومبوز الاحترافية"
      up:
        group_desc: "بدء وإدارة دورة حياة الخدمات المحددة من ملف docker-compose.yml مع إمكانية التشغيل في الخلفية"
        r1: "تشغيل خدمات `web` و `db` فقط في الوضع المنفصل"
        r2: "إعادة بناء الصور قبل بدء الخدمات"
        r3: "إزالة الحاويات غير المعرفة في ملف compose الحالي"
      build:
        group_desc: "بناء صور الخدمات كما هو موصوف في ملف compose مع التحكم في الكاش والتوازي"
        r1: "إعادة بناء الصور بالكامل بدون استخدام الكاش"
        r2: "بناء جميع الخدمات بشكل متوازي لتسريع العملية"
        r3: "بناء صورة خدمة `web` فقط"
      pull:
        group_desc: "تحميل أحدث نسخ من الصور من السجل لجميع الخدمات أو خدمات محددة"
        r1: "تحميل الصور لجميع الخدمات"
        r2: "تحميل صورة خدمة `db` فقط"
        r3: "متابعة التنفيذ مع تجاهل أخطاء تحميل الصور"
      restart:
        group_desc: "إعادة تشغيل جميع الخدمات أو خدمات محددة بدون إعادة إنشاء الحاويات"
        r1: "إعادة تشغيل جميع الخدمات في المشروع الحالي"
        r2: "إعادة تشغيل خدمة `worker` فقط"
        r3: "إعادة تشغيل عدة خدمات في وقت واحد"
      exec:
        group_desc: "تشغيل أمر داخل حاوية خدمة قيد التشغيل مع خيار الوضع التفاعلي"
        r1: "تشغيل psql داخل حاوية خدمة `db`"
        r2: "فتح صدفة داخل حاوية `web`"
        r3: "تنفيذ طلب curl من حاوية خدمة `api`"
      config:
        group_desc: "إخراج التكوين النهائي لـ Compose مع مراعاة جميع الملفات ومتغيرات البيئة"
        r1: "عرض التكوين المدمج بتنسيق YAML"
        r2: "إدراج جميع الخدمات"
        r3: "عرض جميع متغيرات البيئة المستخدمة بواسطة الخدمات"
      watch:
        group_desc: "إعادة تشغيل الخدمات تلقائيًا عند تغيّر الملفات المصدرية، مفيد للتطوير"
        r1: "بدء مراقبة الملفات وإعادة تشغيل الخدمات عند حدوث تغييرات"
      events:
        group_desc: "تدفق أحداث Compose: بدء، إيقاف، تحديث الخدمات"
        r1: "استقبال الأحداث بتنسيق JSON"
      rm:
        group_desc: "إزالة الحاويات المتوقفة للخدمات"
        r1: "إزالة حاويات خدمات `web` و `db`"
      pause:
        group_desc: "إيقاف تشغيل الخدمات مؤقتًا"
        r1: "إيقاف خدمة `api` مؤقتًا"
      unpause:
        group_desc: "استئناف الخدمات الموقوفة"
        r1: "استئناف خدمة `api`"
      create:
        group_desc: "إنشاء الحاويات بدون تشغيلها"
        r1: "إنشاء حاويات لخدمات `web` و `db` بدون تشغيلها"
      images:
        group_desc: "عرض قائمة الصور المستخدمة بواسطة الخدمات"
        r1: "عرض صور جميع الخدمات"
      top:
        group_desc: "عرض العمليات الجارية داخل حاويات الخدمات"
        r1: "عرض العمليات داخل حاويات خدمة `web`"

    practices:
      title: "🛠 ممارسات مفيدة وأتمتة مع Docker Compose"
      env_separation:
        title: "فصل البيئات"
        p1: "استخدم ملفات `docker-compose.override.yml` منفصلة للبيئات المختلفة — `development`، `staging`، `production`. هذا يساعد على عزل الإعدادات وتجنب التعارضات."
        p2: "يمكنك أيضًا دمج عدة ملفات تكوين باستخدام الخيار `-f`:"
        p3: "استخدم ملفات `.env` مختلفة (`.env.dev`، `.env.prod`، إلخ) لإدارة متغيرات البيئة."
      secrets:
        title: "تخزين الأسرار بشكل آمن"
        p1: "لا تضع بيانات حساسة (كلمات مرور، رموز) مباشرة في ملفات Compose. بدلاً من ذلك، استخدم:"
        items:
          env: "ملفات `.env` لمتغيرات البيئة (لاحظ أنها غير مشفرة ولا يجب رفعها لمستودعات عامة)"
          swarm_secret: "`docker secret` و `docker config` لإدارة الأسرار والإعدادات بأمان في Swarm"
          volumes: "وحدات تخزين خارجية لملفات التكوين التي تحتوي على أسرار"
          external_mgr: "أنظمة إدارة أسرار خارجية (مثل HashiCorp Vault، AWS Secrets Manager)"
      startup_order:
        title: "ترتيب بدء الخدمات باستخدام `depends_on` و `healthcheck`"
        p1: "لجعل الخدمات تنتظر حتى تكون التبعيات جاهزة:"
      min_downtime:
        title: "تقليل التوقف أثناء التحديثات"
        p1: "قبل تحديث الخدمات، نفّذ:"
        p2: "الخيار `-d` يشغل الحاويات في الخلفية، و`--remove-orphans` يزيل الحاويات غير المعرفة في الإعدادات الحالية."
        p3: "لإيقاف وإزالة الحاويات القديمة تمامًا إذا لزم الأمر:"
        p4: "يضمن هذا تحميل الصور الجديدة وإزالة الحاويات غير المستخدمة بدون توقف."
      hot_reload_volumes:
        title: "إعادة تحميل الكود أثناء التطوير باستخدام Volumes"
        p1: "استخدم `volumes` لتركيب مجلدات محلية داخل الحاويات. هذا يسمح بتطبيق تغييرات الكود فورًا بدون إعادة بناء الصور."
        p2: "كن حذرًا من مشاكل الأذونات والتخزين المؤقت خاصة في Windows وmacOS لتجنب مشاكل الأداء."
      hot_reload_watch:
        title: "إعادة تحميل الكود بدون Volumes (Compose 2.22+)"
      central_logging:
        title: "تجميع مركزي للسجلات"
        p1: "أعد توجيه سجلات الحاويات إلى أنظمة مراقبة وتجميع مثل ELK وLoki وPrometheus وFluentd للتحليل والتنبيه."
        p2: "استخدم برامج تشغيل السجلات (`--log-driver`) لتمكين جمع السجلات مركزيًا."
        p3: "اضبط برامج تشغيل السجلات للحاويات في Compose:"
      auto_restart:
        title: "إعادة تشغيل الخدمات تلقائيًا"
        p1: "اضبط سياسة إعادة التشغيل في `docker-compose.yml`:"
        p2: "سياسات إعادة التشغيل الأخرى تشمل:"
        policies:
          no: "`no` — عدم إعادة التشغيل تلقائيًا (افتراضي)"
          always: "`always` — إعادة تشغيل دائمًا"
          on_failure: "`on-failure` — إعادة تشغيل فقط عند الفشل (مع خيار تحديد عدد المحاولات)"
        p3: "في بيئة الإنتاج، `unless-stopped` هو الخيار الأمثل لضمان استمرارية الخدمة."
        p4: "هذا يمكّن من استعادة الخدمات تلقائيًا بعد الأعطال أو إعادة تشغيل المضيف."
      profiles:
        title: "ملفات تعريف الخدمات"
        p1: "تسمح بتشغيل مجموعات محددة فقط من الخدمات:"
        p2: "لتشغيل ملف تعريف الواجهة الأمامية فقط:"

    debugging:
      title: "🐞 تصحيح وتتبع خدمات Docker Compose"
      exec:
        group_desc: "تنفيذ أمر داخل خدمة تعمل بالفعل، مما يوفر الوصول إلى الحاوية أو تشغيل عمليات فردية"
        r1: "فتح صدفة (shell) داخل حاوية خدمة `web`"
        r2: "تشغيل أمر psql داخل حاوية خدمة `db`"
      logs:
        group_desc: "عرض سجلات الخدمة للتشخيص والمراقبة"
        r1: "عرض سجلات خدمة `db` في الوقت الحقيقي"
        r2: "إظهار آخر 50 سطرًا من سجلات خدمة `api`"
        r3: "إظهار سجلات الساعة الأخيرة لخدمة `web`"
      inspect:
        group_desc: "عرض معلومات تفصيلية عن الحاوية التي تشغل الخدمة"
        r1: "الحصول على JSON بمعلومات تفصيلية عن حاوية خدمة `web`"
      stats:
        group_desc: "مراقبة استخدام الموارد للحاويات التي تشغل الخدمات"
        r1: "تتبع استخدام وحدة المعالجة والذاكرة والموارد الأخرى لحاوية خدمة `worker`"
      run:
        group_desc: "تشغيل حاوية مؤقتة بإعدادات الخدمة، مفيدة لأغراض التصحيح"
        r1: "تشغيل حاوية مؤقتة لخدمة `web` مع صدفة تفاعلية"
      cp:
        group_desc: "نسخ الملفات بين المضيف والحاوية"
        r1: "نسخ ملف من حاوية خدمة `db` إلى المضيف"
      tip:
        one_off: "💡 لتصحيح مريح للإعدادات المعقدة متعددة الخدمات، استخدم `docker compose run --rm` لتشغيل حاويات فردية مع الشبكات والأحجام اللازمة دون التأثير على الخدمات الأساسية."

  resources:
    title: "📚 موارد إضافية"
    ignore:
      title: "🚫 تجاهل الملفات باستخدام `.dockerignore`"
      p1: "أضف الملفات والمجلدات إلى ملف `.dockerignore` التي لا ينبغي تضمينها في الصورة لتقليل الحجم وتسريع عملية البناء:"
    aliases:
      title: "⚡ تبسيط الأوامر باستخدام الأسماء المستعارة"
      p1: "يمكنك إنشاء أسماء مستعارة للأوامر المستخدمة بشكل متكرر لتشغيلها بسرعة أكبر:"
    advice:
      title: "🧠 نصيحة: إرشادات لاستخدام Docker"
      b1: "لا تحاول حفظ كل شيء — استخدم `docker --help` أو `docker <command> --help` لاستكشاف الأوامر."
      b2: "تمرن بانتظام وجرب مشاريع بسيطة."
      b3: "راقب أحجام الصور وقم بإزالة الملفات غير الضرورية عبر `.dockerignore`."
    links:
      title: "🌐 روابط مفيدة"
      docs_intro: "📘 **التوثيق الرسمي لـ Docker** — أدلة ومرجع شامل لجميع مواضيع Docker:"
      sheet_intro: "📙 **ورقة الغش لـ Docker** — ورقة الغش الرسمية الكاملة لـ Docker:"
      hub_intro: "📗 **Docker Hub** — الصور والمستودعات:"
