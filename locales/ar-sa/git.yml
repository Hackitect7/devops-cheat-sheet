git:
  meta:
    _root:
      title: "🐙 Git و GitHub CLI"
      desc: "أوامر Git الأساسية والمتقدمة للتحكم في الإصدارات، الفروع، المستودعات البعيدة، التخزين المؤقت، العلامات و GitHub CLI."

  basic:
    _root:
      title: "🔹 الأوامر الأساسية"
    git_add:
      desc: "إضافة ملف إلى منطقة التحضير (staging)"
      ex1: "تحضير ملف محدد للالتزام القادم"
      ex2: "تحضير جميع التغييرات في المجلد الحالي وما تحته"
      ex3: "اختيار الأجزاء المراد تحضيرها بشكل تفاعلي (مفيد للالتزامات الجزئية)"
    git_clone:
      desc: "استنساخ مستودع إلى مجلد جديد"
      ex1: "استنساخ فرع محدد فقط (بدلاً من الافتراضي)"
      ex2: "استنساخ الالتزام الأخير فقط كنسخة سطحية لتوفير الوقت والمساحة"
    git_commit:
      desc: "تسجيل التغييرات في المستودع"
      ex1: "التزام مع رسالة بدون فتح المحرر"
      ex2: "تحضير والتزام جميع الملفات المعدلة برسالة"
      ex3: "تحديث الالتزام الأخير (تغيير الرسالة أو إضافة تغييرات)"
      ex4: "إنشاء التزام fixup ليتم دمجه تلقائيًا لاحقًا أثناء rebase تفاعلي"
    git_config:
      desc: "الحصول على إعدادات المستودع أو تعيينها (محلية أو عامة)"
      ex1: "تعيين اسم المستخدم العالمي لـ Git"
      ex2: "تعيين البريد الإلكتروني العالمي لـ Git"
      ex3: "عرض جميع إعدادات Git (الاسم، البريد الإلكتروني، المحرر، إلخ)"
    git_diff:
      desc: "عرض التغييرات بين الالتزامات أو بين الالتزام ومساحة العمل"
      ex1: "عرض ما تغير منذ آخر التزام (تغييرات غير محضرة)"
      ex2: "عرض ما سيتم تضمينه في الالتزام القادم"
      ex3: "عرض التغييرات على مستوى الكلمات"
    git_grep:
      desc: "البحث داخل ملفات المستودع"
      ex1: "البحث عن جميع إشارات `functionName` في جميع ملفات المشروع"
      ex2: "البحث عن الأسطر التي تحتوي على `TODO` مع إظهار أرقام الأسطر"
      ex3: "البحث عن كلمة `login` بدون حساسية لحالة الأحرف"
    git_init:
      desc: "إنشاء مستودع Git فارغ أو إعادة تهيئة مستودع موجود"
      ex1: "تهيئة مستودع جديد في مجلد my-project"
      ex2: "تهيئة مستودع bare"
    git_log:
      desc: "عرض سجلات الالتزامات"
      ex1: "عرض تاريخ الالتزامات في صيغة مختصرة"
      ex2: "عرض جميع الفروع في رسم بياني مرئي"
      ex3: "عرض التصحيحات وإحصائيات تغييرات الملفات للالتزامات"
    git_reset:
      desc: "إلغاء تحضير الملفات مع الاحتفاظ بالتغييرات في مساحة العمل"
      ex1: "إزالة ملف من التحضير (مع الاحتفاظ بالتعديلات)"
      ex2: "الرجوع التزامًا واحدًا وحذف جميع التغييرات (غير قابل للاسترجاع!)"
      ex3: "إلغاء الالتزام الأخير مع الاحتفاظ بالتغييرات جاهزة للالتزام مجددًا"
      ex4: "إلغاء الالتزام مع الاحتفاظ بالتغييرات غير محضرة في مساحة العمل"
    git_show:
      desc: "عرض أنواع مختلفة من الكائنات"
      ex1: "عرض التغييرات ورسالة الالتزام المحدد"
      ex2: "عرض الالتزام السابق للحالي"
      ex3: "عرض ملخص لتغييرات الملفات في الالتزام الأخير"
    git_status:
      desc: "عرض حالة مساحة العمل"
      ex1: "عرض الحالة بصيغة مختصرة"
      ex2: "عرض الفرع الحالي وحالة الملفات"

  branching_merging:
    _root:
      title: "🌿 إنشاء الفروع والدمج"
    git_branch:
      desc: "إنشاء أو عرض أو حذف الفروع"
      ex1: "إنشاء فرع جديد باسم `new-feature`"
      ex2: "حذف فرع محلي باسم `old-feature`"
    git_checkout:
      desc: "التبديل بين الفروع أو استعادة الملفات من التزامات أخرى"
      ex1: "التبديل إلى الفرع `main`"
      ex2: "إنشاء والتبديل إلى فرع جديد باسم `new-branch`"
    git_switch:
      desc: "التبديل بين الفروع (بديل مبسط لـ `checkout`)"
      ex1: "التبديل إلى الفرع `main`"
      ex2: "إنشاء والتبديل إلى فرع جديد باسم `feature-x`"
      ex3: "التبديل إلى فرع موجود باسم `new-feature`"
    git_merge:
      desc: "دمج التغييرات من فرع آخر في الفرع الحالي"
      ex1: "دمج فرع `new-feature` في الفرع الحالي"
      ex2: "إنشاء التزام دمج دائم حتى عند إمكانية fast-forward"
      ex3: "إلغاء الدمج والتراجع إذا حدثت تعارضات"
    git_rebase:
      desc: "إعادة تطبيق الالتزامات على قاعدة جديدة"
      ex1: "إعادة تطبيق التزامات الفرع فوق فرع `main`"
      ex2: "تحرير آخر 3 التزامات بشكل تفاعلي"
      ex3: "إيقاف وإلغاء عملية rebase جارية"
      ex4: "دمج الالتزامات المحددة كـ fixup أو squash تلقائيًا أثناء rebase"
    git_cherry_pick:
      desc: "تطبيق التزامات محددة من فرع آخر"
      ex1: "تطبيق التزام محدد (بواسطة hash) على الفرع الحالي"
      ex2: "متابعة cherry-pick بعد حل التعارضات"
      ex3: "تطبيق نطاق من الالتزامات بين `A` و `B`"

  remote:
    _root:
      title: "📡 المستودعات البعيدة"
    git_remote:
      desc: "إدارة الروابط مع المستودعات البعيدة (مثل GitHub)"
      ex1: "عرض أسماء remotes وروابطها"
      ex2: "إضافة مستودع بعيد باسم `origin`"
    git_pull:
      desc: "تحميل ودمج التغييرات من فرع بعيد"
      ex1: "جلب ودمج تغييرات فرع `main` البعيد في فرعك الحالي"
      ex2: "جلب وإعادة تطبيق فرعك على فرع بعيد بدلًا من الدمج"
    git_push:
      desc: "رفع تغييراتك المحلية إلى مستودع بعيد"
      ex1: "دفع فرعك المحلي `main` إلى `origin`"
    git_fetch:
      desc: "تحميل التغييرات من البعيد بدون دمج"
      ex1: "جلب جميع التحديثات من `origin` بدون تطبيقها"
      ex2: "جلب فرع `main` فقط من البعيد"
      ex3: "جلب التحديثات من جميع remotes"
      ex4: "تنظيف الفروع المحذوفة على البعيد"
      ex5: "عرض ما سيتم جلبه بدون تنزيل"
      ex6: "تحديث فرع التتبع المحلي بقوة (`origin/main`)"

  stash_cleanup:
    _root:
      title: "📦 التخزين المؤقت والتنظيف"
    git_stash:
      desc: "حفظ التغييرات غير الملتزمة مؤقتًا (العمل الجاري)"
      ex1: "حفظ الملفات المعدلة والمحجوزة ثم العودة لآخر التزام"
      ex2: "إعادة تطبيق آخر stash (مع بقائه محفوظًا)"
      ex3: "إعادة تطبيق وحذف آخر stash"
      ex4: "عرض قائمة جميع stashes"
      ex5: "إنشاء فرع جديد وتطبيق أحدث stash عليه"
    git_clean:
      desc: "حذف الملفات غير المتتبعة (غير موجودة في Git) بشكل دائم"
      ex1: "حذف الملفات غير المتتبعة في المجلد الحالي"
      ex2: "حذف الملفات والمجلدات غير المتتبعة"
      ex3: "معاينة ما سيتم حذفه (تشغيل آمن)"

  tags:
    _root:
      title: "🏷️ العلامات"
    git_tag:
      desc: "إنشاء أو عرض أو حذف العلامات لتحديد نقاط محددة في التاريخ (مثل الإصدارات)"
      ex1: "إنشاء علامة annotated باسم `v1.0` مع رسالة"
      ex2: "حذف العلامة المحلية `v1.0` (لا يؤثر على البعيد)"
    git_push:
      desc: "رفع الالتزامات والفروع والعلامات من المحلي إلى البعيد"
      ex1: "رفع جميع العلامات المحلية إلى البعيد"
      ex2: "رفع علامة محددة (مثل `v1.0`) إلى المستودع البعيد"
      ex3: "حذف العلامة البعيدة `v1.0`"

  conflicts:
    _root:
      title: "🛠️ حل التعارضات"
    git_mergetool:
      desc: "فتح أداة مرئية لحل تعارضات الدمج"
      ex1: "استخدام أداة محددة (مثل Meld) لحل التعارضات"
    git_rerere:
      desc: "السماح لـ Git بتذكر كيفية حل التعارضات سابقًا"
      ex1: "تفعيل إعادة استخدام حلول التعارض السابقة تلقائيًا"
      ex2: "عرض الملفات التي لديها حلول تعارض محفوظة"
      ex3: "عرض التغييرات التي حفظها Git لإعادة استخدامها"

  advanced:
    _root:
      title: "⚙️ أوامر متقدمة"
    git_bisect:
      desc: "استخدام البحث الثنائي للعثور على الالتزام الذي أدخل الخطأ"
      ex1: "بدء بحث ثنائي بين التزام جيد وآخر سيء لتحديد الخطأ"
      ex2: 'وضع علامة على الالتزام الحالي كـ "سيء"'
      ex3: 'وضع علامة على التزام معروف كـ "جيد"'
    git_blame:
      desc: "عرض من عدل كل سطر من الملف، مع الإصدار والمؤلف"
      ex1: "عرض المؤلف ومعلومات الالتزام لكل سطر"
      ex2: "عرض معلومات blame لأسطر 10 إلى 20 فقط"
      ex3: "عرض عناوين البريد للمؤلفين مع تغييرات الأسطر"
    git_reflog:
      desc: "عرض وإدارة سجل المراجع (reflog) لحركات الفروع و HEAD"
      ex1: "رؤية مكان إشارة فرع `main` قبل أسبوع"
      ex2: "معاينة إدخالات reflog الأقدم من 30 يومًا قبل حذفها"
      ex3: "حذف إدخال reflog محدد (بحذر)"
    git_submodule:
      desc: "إضافة أو تهيئة أو تحديث أو فحص الوحدات الفرعية"
      ex1: "إضافة مستودع خارجي كـ submodule في مسار محدد"
      ex2: "تهيئة وتنزيل جميع الوحدات الفرعية المدرجة"
      ex3: "تشغيل `git pull` داخل كل submodule لتحديثها"
      ex4: "مزامنة روابط الوحدات بعد التعديلات في `.gitmodules`"
      ex5: "تحديث الوحدات إلى أحدث التزاماتها"
    git_archive:
      desc: "إنشاء أرشيف (zip، tar) للملفات من التزام أو فرع محدد"
      ex1: "إنشاء أرشيف ZIP من الملفات الحالية عند HEAD"
      ex2: "إنشاء أرشيف `.tar.gz` مضغوط من HEAD"
      ex3: "إنشاء أرشيف `.tar.gz` مع جميع الملفات داخل مجلد `project/`"
    git_gc:
      desc: "تنظيف الملفات غير الضرورية وتحسين المستودع"
      ex1: "تنظيف وتحسين شامل (قد يكون بطيئًا لكنه فعال)"
      ex2: "حذف جميع الكائنات غير القابلة للوصول فورًا (خطر إذا لم تكن متأكدًا)"
    git_shortlog:
      desc: "ملخص سريع للمؤلفين والتزاماتهم"
      ex1: "عرض قائمة المؤلفين مع عناوين بريدهم الإلكتروني"
      ex2: "عرض عدد الالتزامات لكل مؤلف مرتبة حسب العدد"
      ex3: "مثل السابق، لكن مع الأسماء والبريد أيضًا"
    git_revert:
      desc: "إنشاء التزام جديد يلغي تغييرات التزام سابق دون إعادة كتابة التاريخ"
      ex1: "إلغاء الالتزام الأخير بإنشاء التزام يعكس تغييره"
      ex2: "إلغاء التزام محدد بواسطة hash مع إنشاء التزام عكسي آمن"

  gh:
    _root:
      title: "🐙 GitHub CLI"
      note: "`gh` يتيح لك إدارة GitHub من الطرفية."
    gh_auth_login:
      desc: "المصادقة مع مضيف GitHub للسماح لأوامر CLI بالتفاعل مع حسابك"
      ex1: "المصادقة باستخدام رمز وصول شخصي مخزن في ملف (`mytoken.txt`)"
      ex2: "المصادقة مع خادم GitHub Enterprise (غير github.com)"
    gh_repo_clone:
      desc: "استنساخ مستودع GitHub إلى جهازك المحلي"
      ex1: "استنساخ المستودع repo المملوك من قبل `user` في مجلد باسم `repo`"
      ex2: "استنساخ المستودع لكن تنزيل الالتزام الأخير فقط لاستنساخ أسرع وأصغر"
      ex3: "استنساخ المستودع إلى مجلد مخصص `workspace/cli`"
    gh_issue_list:
      desc: "عرض القضايا (Issues) في مستودع GitHub مع إمكانية التصفية حسب معايير مختلفة"
      ex1: "عرض القضايا المخصصة لك"
      ex2: "عرض القضايا بغض النظر عن حالتها (مفتوحة أو مغلقة)"
      ex3: 'عرض القضايا المطابقة لـ "error"، غير المعينة، مرتبة حسب تاريخ الإنشاء تصاعديًا'
    gh_pr_create:
      desc: "إنشاء Pull Request على GitHub عبر CLI"
      ex1: "إنشاء Pull Request بعنوان محدد"
      ex2: 'ربط Pull Request بمشروع GitHub يسمى "Roadmap"'
      ex3: "إنشاء PR من فرع `feature` في fork `monalisa` إلى فرع `develop`"
    gh_repo_create:
      desc: "إنشاء مستودع جديد على GitHub عبر CLI"
      ex1: "إنشاء مستودع جديد باسم `my-project` على GitHub (مع تفاعل تفاعلي)"
      ex2: "إنشاء مستودع عام واستنساخه محليًا"
      ex3: "إنشاء مستودع بعيد خاص من المجلد الحالي وإضافة remote باسم `upstream`"

  aliases:
    _root:
      title: "💡 اختصارات Git (Aliases مفيدة)"
      intro: "قم بإعداد أسماء مستعارة مريحة لتسريع الأوامر الشائعة في Git:"

  pro:
    _root:
      title: "🚀 أوامر Git المتقدمة للمحترفين"
    git_filter_repo:
      desc: "أداة قوية وسريعة لإعادة كتابة تاريخ Git لإزالة أو تعديل الملفات، أو المؤلفين، أو المسارات؛ تحل محل git filter-branch بسرعة وأمان محسنين"
      ex1: "إعادة كتابة تاريخ المستودع بكفاءة لإزالة الملفات أو المجلدات الحساسة"
      ex2: "استبدال النصوص أو الأنماط عبر التاريخ بالكامل (مثل إزالة بيانات الاعتماد)"
      ex3: "استخراج تاريخ مجلد فرعي إلى مستودع جديد مع الحفاظ على بيانات الالتزام"
    git_worktree:
      desc: "إدارة مجلدات عمل متعددة مرتبطة بمستودع واحد، مما يسمح بالعمل على فروع متعددة في نفس الوقت بدون استنساخ"
      ex1: "إنشاء مجلد عمل إضافي مرتبط بنفس المستودع للعمل على فرع آخر بالتوازي"
      ex2: "عرض جميع worktrees النشطة مع مساراتها والفروع المرتبطة بها"
      ex3: "إزالة worktree مرتبط عند عدم الحاجة وتنظيف المجلدات بأمان"
    git_replace:
      desc: "إنشاء مراجع مؤقتة تستبدل الكائنات الحالية، مما يتيح التلاعب المحلي بالتاريخ بدون تدمير"
      ex1: "استبدال التزام بآخر مؤقتًا في المستودع المحلي للاختبار أو التصحيح"
      ex2: "عرض جميع المراجع النشطة للاستبدال"
      ex3: "حذف مرجع استبدال محدد لإرجاع السلوك"
    git_stash_adv:
      desc: "حفظ التغييرات غير الملتزمة مؤقتًا في stack، مما يسمح بالتبديل بين السياقات بدون الالتزام"
      ex1: "اختيار الأجزاء المراد حفظها بشكل تفاعلي للتحكم الدقيق"
      ex2: "إنشاء stash برسالة مخصصة لتسهيل التعرف"
      ex3: "تطبيق stash محدد من القائمة بدون حذفه"
    git_rebase_adv:
      desc: "إعادة تطبيق الالتزامات فوق قاعدة جديدة، مما يسهل الحصول على تاريخ أنظف وخطي وتحريره بشكل تفاعلي"
      ex1: "بدء rebase تفاعلي يعيد ترتيب ودمج الالتزامات المحددة تلقائيًا"
      ex2: "إعادة ترتيب ودمج الالتزامات المحددة قبل الدفع للحفاظ على التاريخ نظيفًا"
      ex3: "إنشاء التزام fixup سيتم دمجه تلقائيًا أثناء rebase"
      ex4: "إنشاء التزام squash لدمجه مع التزام محدد أثناء rebase"
    git_bisect_pro:
      desc: "أداة بحث ثنائي لتحديد الالتزام الذي أدخل خطأ بسرعة عن طريق اختبار الالتزامات المتتالية"
      ex1: "أتمتة عملية bisect بتشغيل برنامج اختبار على كل التزام لتحديد الالتزام المسبب للخطأ"
      ex2: "تشغيل برنامج اختبار على كل التزام لتسريع تحديد الأخطاء"
      ex3: "فتح أداة رسومية لتصور عملية bisect"
      ex4: "الخروج من وضع bisect والعودة إلى HEAD الأصلي"
    git_commit_pro:
      desc: "تسجيل التغييرات مع خيارات متقدمة مثل التعديل، التوقيع، fixup، وتخصيص الرسائل للحفاظ على تاريخ عالي الجودة"
      ex1: "إنشاء التزام موقّع بمفتاح GPG للتحقق من صحة المؤلف"
      ex2: "توقيع الالتزامات باستخدام GPG لضمان النزاهة وصحة المؤلف"
      ex3: "تكوين مفتاح GPG المستخدم لتوقيع الالتزامات بشكل عام"
      ex4: "عرض معلومات توقيع GPG الخاصة بالالتزامات"
    git_reflog_pro:
      desc: "الاحتفاظ بسجل لتحديثات HEAD والفروع، ضروري لاستعادة الالتزامات المفقودة وفهم الحركات المحلية"
      ex1: "إعادة تعيين الفرع الحالي إلى حالة سابقة من reflog للاستعادة"
      ex2: "حذف جميع إدخالات reflog فورًا لتنظيف السجل (بحذر)"

  pro_tips:
    _root:
      title: "🧰 نصائح احترافية وتلقائية سير العمل"
    columns:
      topic: "الموضوع"
      commands_example: "الأوامر / المثال"
      explanation_tips: "الشرح والنصائح الاحترافية"
    aggressive_cleanup:
      topic: "تنظيف المستودع بعمق"
      desc: "إجراء جمع قمامة عميق وحذف الكائنات غير القابلة للوصول فورًا لتحسين الأداء. يُستخدم أثناء الصيانة"
    parallel_worktrees:
      topic: "Worktrees للفروع المتوازية"
      desc: "الاحتفاظ بمجلدات عمل متعددة لتطوير الميزات بشكل متزامن بدون استنساخ إضافي"
    linear_history:
      topic: "تاريخ خطي ونظيف"
      desc: "قبل الدفع، قم بإعادة تطبيق الالتزامات تفاعليًا مع autosquash للحفاظ على التاريخ نظيفًا"
    secure_commits:
      topic: "التزامات آمنة"
      desc: "توقيع الالتزامات باستخدام GPG لتعزيز الموثوقية، إلزامي في بيئات الشركات"
    automated_bisect:
      topic: "البحث الآلي عن الأخطاء"
      desc: "أتمتة عملية البحث عن الأخطاء بتشغيل برنامج اختبار على كل التزام أثناء bisect"
    conflict_cache:
      topic: "ذاكرة حلول التعارض"
      desc: "تمكين إعادة استخدام حلول التعارض لتسريع حل التعارضات المتكررة عبر rebase أو الدمج"
    shared_aliases_hooks:
      topic: "الأسماء المستعارة والـ Hooks المشتركة"
      desc: "تخزين اختصارات Git الشائعة و commit hooks في مستودع مشترك أو CI لفرض معايير الفريق وزيادة الإنتاجية"

  resources:
    _root:
      title: "📚 موارد إضافية"
    tip:
      title: "🧠 **نصيحة**"
      desc: "لا تحاول حفظ كل شيء. استخدم `--help`، واستكشف، وتدرّب بانتظام:"
    links:
      title: "🌐 روابط مفيدة"
      official_docs: "📘 **التوثيق الرسمي لـ Git** — دليل تفصيلي لجميع أوامر Git:"
      learn_branching: "📙 **تعلم Git Branching** — درس تفاعلي مرئي لإتقان مفاهيم الفروع:"
      pro_git_book: "📕 **كتاب Pro Git** (مجاني، بواسطة Scott Chacon & Ben Straub):"
      official_cheatsheet: "📗 **ورقة الغش الرسمية لـ Git** (مرجع مختصر رسمي):"
