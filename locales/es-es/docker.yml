docker:
  meta:
    _root:
      title: "üê≥ Docker"
      desc: "Docker es una plataforma para ejecutar aplicaciones en contenedores aislados. Esta hoja de referencia contiene comandos para trabajar con im√°genes, contenedores, redes, vol√∫menes, as√≠ como con Docker Compose y Swarm."

  basic:
    _root:
      title: "üì¶ Comandos b√°sicos"
    docker:
      desc: "El comando principal de Docker CLI utilizado para ejecutar subcomandos y gestionar contenedores, im√°genes, redes y vol√∫menes"
    docker_version:
      desc: "Mostrar la versi√≥n instalada de Docker (cliente y servidor). √ötil para verificar la instalaci√≥n"
      ex1: "Mostrar solo la versi√≥n de la API del cliente Docker"
      ex2: "Mostrar solo la versi√≥n del servidor (Engine) de Docker"
      ex3: "Mostrar informaci√≥n completa de la versi√≥n en formato JSON"
    docker_system_info:
      desc: "Mostrar informaci√≥n general del sistema Docker: n√∫mero de contenedores, im√°genes, recursos"
      ex1: "Mostrar datos de Docker: versiones, redes, n√∫mero de contenedores e im√°genes"
      ex2: "Mostrar informaci√≥n en formato JSON ‚Äî √∫til para la automatizaci√≥n"
      ex3: "Mostrar n√∫mero de CPUs y memoria total"
      ex4: "Mostrar el controlador de almacenamiento usado por Docker"
    docker_image_pull:
      desc: "Descargar una imagen desde Docker Hub u otro registro. Los contenedores no pueden ejecutarse sin im√°genes"
      ex1: "Descargar la √∫ltima imagen disponible de Ubuntu"
      ex2: "Descargar la imagen ligera de Nginx basada en Alpine Linux"
      ex3: "Descargar la imagen Redis versi√≥n 7"
    docker_container_run:
      desc: "Crear y ejecutar un nuevo contenedor a partir de una imagen"
      ex1: "Ejecutar Ubuntu con una terminal Bash interactiva"
      ex2: "Ejecutar Nginx en modo desacoplado (en segundo plano)"
      ex3: "Ejecutar Nginx y vincular el puerto 80 del contenedor al puerto 8080 del host"
    docker_container_ls:
      desc: "Listar contenedores en ejecuci√≥n"
      ex1: "Mostrar solo los contenedores en ejecuci√≥n"
      ex2: "Mostrar todos los contenedores, incluidos los detenidos"
      ex3: "Mostrar solo los nombres de los contenedores"
    docker_container_start:
      desc: "Iniciar uno o m√°s contenedores detenidos"
      ex1: "Iniciar un contenedor por nombre"
      ex2: "Iniciar todos los contenedores"
      ex3: "Iniciar un contenedor y adjuntar una terminal interactiva"
    docker_container_stop:
      desc: "Detener un contenedor en ejecuci√≥n"
      ex1: "Detener un contenedor por nombre"
      ex2: "Detener todos los contenedores en ejecuci√≥n"
      ex3: "Detener un contenedor d√°ndole 5 segundos para finalizar procesos"
    docker_container_restart:
      desc: "Reiniciar un contenedor"
      ex1: "Reiniciar un contenedor espec√≠fico"
      ex2: "Reiniciar todos los contenedores en ejecuci√≥n"
      ex3: "Reiniciar un contenedor con un retraso de 10 segundos"
    docker_container_rm:
      desc: "Eliminar un contenedor"
      ex1: "Eliminar un contenedor detenido espec√≠fico"
      ex2: "Eliminar todos los contenedores detenidos"
      ex3: "Forzar la eliminaci√≥n de un contenedor en ejecuci√≥n"
    docker_image_ls:
      desc: "Listar im√°genes descargadas"
      ex1: "Mostrar todas las im√°genes en el host"
      ex2: "Mostrar todas las im√°genes, incluidas las capas intermedias"
      ex3: "Mostrar solo nombres y etiquetas de im√°genes"
    docker_image_rm:
      desc: "Eliminar una o m√°s im√°genes del almacenamiento local"
      ex1: "Eliminar la imagen con etiqueta `latest` del repositorio `test1`"
      ex2: "Eliminar una imagen por su ID"
      ex3: "Eliminar todas las im√°genes (¬°usar con precauci√≥n!)"

  container:
    _root:
      title: "üîÅ Gesti√≥n de contenedores"
    docker_container_exec:
      desc: "Ejecutar un comando dentro de un contenedor en ejecuci√≥n"
      ex1: "Abrir un shell bash interactivo dentro del contenedor llamado `container`"
      ex2: "Ejecutar el comando `ls` en el directorio `/app` dentro del contenedor"
      ex3: "Ejecutar un comando en el contenedor en modo desacoplado (sin esperar)"
    docker_container_logs:
      desc: "Ver los registros del contenedor"
      ex1: "Mostrar todos los registros del contenedor `container`"
      ex2: "Seguir los registros del contenedor en tiempo real"
      ex3: "Mostrar las √∫ltimas 50 l√≠neas de registros"
    docker_inspect:
      desc: "Obtener informaci√≥n detallada en formato JSON sobre un contenedor o imagen"
      ex1: "Mostrar detalles del contenedor `container`"
      ex2: "Mostrar la direcci√≥n IP del contenedor"
    docker_container_stats:
      desc: "Mostrar estad√≠sticas en tiempo real del uso de recursos de los contenedores"
      ex1: "Mostrar uso de CPU, memoria, red y disco de todos los contenedores"
      ex2: "Mostrar estad√≠sticas solo de un contenedor espec√≠fico"
      ex3: "Mostrar una instant√°nea de estad√≠sticas y salir"
    docker_container_rename:
      desc: "Renombrar un contenedor"
      ex1: "Renombrar un contenedor de `old_name` a `new_name`"
    docker_container_cp:
      desc: "Copiar archivos entre un contenedor y el host"
      ex1: "Copiar un archivo desde el contenedor al directorio actual del host"
      ex2: "Copiar un archivo desde el host al contenedor"
      ex3: "Transmitir un archivo de registro desde el contenedor y filtrar las l√≠neas con \"ERROR\" sin guardarlo en disco"
    docker_container_top:
      desc: "Mostrar procesos en ejecuci√≥n dentro de un contenedor"
      ex1: "Mostrar procesos del contenedor llamado `container`"
    docker_container_pause:
      desc: "Pausar todos los procesos en un contenedor"
      ex1: "Pausar el contenedor `container`"
    docker_container_unpause:
      desc: "Reanudar un contenedor pausado"
      ex1: "Reanudar el contenedor `container`"
    docker_container_update:
      desc: "Actualizar configuraciones del contenedor sin reiniciar"
      ex1: "Limitar el uso de memoria del contenedor a 500 MB"

  images:
    _root:
      title: üß± Im√°genes y Dockerfile
    docker_buildx_build:
      desc: "Construir una imagen Docker a partir de un Dockerfile"
      ex1: "Construir una imagen etiquetada como `my_image` desde el directorio actual"
      ex2: "Construir una imagen etiquetada con la versi√≥n `1.0`"
      ex3: "Construir una imagen sin usar cach√© para una compilaci√≥n limpia"
    docker_container_commit:
      desc: "Crear una imagen desde el estado actual de un contenedor"
      ex1: "Crear la imagen `my_img` etiquetada `v1` desde el contenedor `container`"
      ex2: "Crear una imagen con un mensaje de commit"
      ex3: "Crear una imagen especificando el autor"
    docker_image_tag:
      desc: "A√±adir o cambiar una etiqueta de imagen"
      ex1: "A√±adir una etiqueta para enviar al registro `myrepo`"
      ex2: "Crear la etiqueta `stable` para la imagen etiquetada `1.0`"
      ex3: "A√±adir una etiqueta `backup` a una imagen local"
    docker_image_push:
      desc: "Enviar una imagen a Docker Hub u otro registro"
      ex1: "Enviar la imagen etiquetada `latest` al repositorio `myrepo`"
      ex2: "Enviar la imagen etiquetada `1.0`"
      ex3: "Enviar la imagen con la etiqueta predeterminada `latest`"
    docker_login:
      desc: "Autenticarse en Docker Hub u otro registro"
      ex1: "Ingresar usuario y contrase√±a de forma interactiva en Docker Hub"
      ex2: "Iniciar sesi√≥n en un registro privado"
      ex3: "Iniciar sesi√≥n con usuario y contrase√±a (no recomendado)"
    docker_logout:
      desc: "Cerrar sesi√≥n en Docker Hub u otro registro"
      ex1: "Cerrar sesi√≥n en Docker Hub"
      ex2: "Cerrar sesi√≥n en un registro privado"
    healthcheck:
      desc: "Instrucci√≥n de Dockerfile para comprobar autom√°ticamente el estado de salud del contenedor"
      ex1: "A√±adir un healthcheck para verificar la disponibilidad del servicio cada 30 segundos"
      ex2: "Comprobar el estado de healthcheck de un contenedor en ejecuci√≥n"

  networks:
    _root:
      title: üîå Redes y Vol√∫menes
    docker_network_ls:
      desc: "Listar todas las redes de Docker"
      ex1: "Mostrar todas las redes creadas en Docker"
      ex2: "Mostrar solo las redes con el controlador `bridge`"
      ex3: "Mostrar solo los nombres de las redes"
    docker_network_create:
      desc: "Crear una nueva red Docker"
      ex1: "Crear una red llamada `my_net` con configuraci√≥n predeterminada"
      ex2: "Crear una red con el controlador `bridge`"
      ex3: "Crear una red con una subred especificada"
    docker_network_connect:
      desc: "Conectar un contenedor a una red"
      ex1: "Conectar el contenedor llamado `container` a la red `my_net`"
      ex2: "Conectar con alias `db_net`"
    docker_network_disconnect:
      desc: "Desconectar un contenedor de una red"
      ex1: "Desconectar el contenedor `container` de la red `my_net`"
    docker_volume_ls:
      desc: "Listar todos los vol√∫menes de Docker"
      ex1: "Mostrar todos los vol√∫menes de Docker"
      ex2: "Mostrar vol√∫menes no utilizados"
    docker_volume_create:
      desc: "Crear un nuevo volumen de Docker"
      ex1: "Crear un volumen llamado `my_vol`"
      ex2: "Crear un volumen temporal usando tmpfs"
    docker_volume_inspect:
      desc: "Mostrar informaci√≥n detallada de un volumen"
      ex1: "Mostrar detalles del volumen `my_vol` en formato JSON"
    docker_volume_rm:
      desc: "Eliminar uno o m√°s vol√∫menes"
      ex1: "Eliminar el volumen llamado `my_vol`"
      ex2: "Eliminar todos los vol√∫menes no utilizados"

  plugins:
    _root:
      title: üß© Plugins de Docker
    docker_plugin_ls:
      desc: "Listar los plugins de Docker instalados"
      ex1: "Mostrar todos los plugins y su estado"
    docker_plugin_install:
      desc: "Instalar un plugin de Docker desde un registro"
      ex1: "Instalar el plugin de volumen SSHFS"
      ex2: "Instalar el plugin de red Weave"
    docker_plugin_disable:
      desc: "Desactivar un plugin instalado"
      ex1: "Desactivar el plugin SSHFS"
    docker_plugin_enable:
      desc: "Activar un plugin previamente desactivado"
      ex1: "Activar el plugin SSHFS"
    docker_plugin_rm:
      desc: "Eliminar un plugin de Docker"
      ex1: "Eliminar el plugin SSHFS"

  compose:
    _root:
      title: üìã Docker Compose
    docker_compose_up:
      desc: "Iniciar contenedores definidos en `docker-compose.yml`"
      ex1: "Iniciar todos los servicios en el directorio actual en modo interactivo"
      ex2: "Iniciar servicios en modo desacoplado (en segundo plano)"
      ex3: "Construir im√°genes antes de iniciar los servicios"
    docker_compose_down:
      desc: "Detener y eliminar contenedores, redes y vol√∫menes creados por `up`"
      ex1: "Detener todos los servicios en ejecuci√≥n y eliminar los recursos asociados"
      ex2: "Eliminar tambi√©n los vol√∫menes creados por Compose"
      ex3: "Eliminar tambi√©n las im√°genes creadas por Compose"
    docker_compose_logs:
      desc: "Ver registros de todos o de servicios espec√≠ficos"
      ex1: "Mostrar registros de todos los servicios"
      ex2: "Seguir los registros en tiempo real"
      ex3: "Mostrar registros solo del servicio `web`"
    docker_compose_exec:
      desc: "Ejecutar un comando dentro de un contenedor de servicio en ejecuci√≥n"
      ex1: "Entrar en un shell bash interactivo dentro del contenedor del servicio `web`"
      ex2: "Ejecutar el comando `ls` dentro del contenedor de la base de datos"
      ex3: "Ejecutar un comando dentro del contenedor `worker` en modo desacoplado"
    docker_compose_build:
      desc: "Construir o reconstruir im√°genes de servicios"
      ex1: "Construir todas las im√°genes definidas en `docker-compose.yml`"
      ex2: "Construir solo la imagen del servicio `web`"
      ex3: "Construir im√°genes sin usar cach√©"
    docker_compose_ps:
      desc: "Mostrar el estado de todos los servicios y contenedores"
      ex1: "Mostrar todos los contenedores, incluidos los detenidos"
      ex2: "Mostrar solo los nombres de los servicios"
    docker_compose_pull:
      desc: "Descargar/actualizar im√°genes de servicios desde el registro"
      ex1: "Descargar la imagen solo para el servicio `web`"
      ex2: "Continuar la descarga incluso si algunas im√°genes fallan"
    docker_compose_restart:
      desc: "Reiniciar todos o servicios espec√≠ficos"
      ex1: "Reiniciar solo el servicio `db`"
      ex2: "Reiniciar servicios con un tiempo de espera de 10 segundos"
    docker_compose_config:
      desc: "Mostrar la configuraci√≥n final de Compose en formato YAML"
      ex1: "Listar todos los servicios en la configuraci√≥n"
      ex2: "Listar todos los vol√∫menes definidos en la configuraci√≥n"
    docker_compose_start:
      desc: "Iniciar servicios detenidos sin recrear contenedores"
      ex1: "Iniciar el servicio `web`"
      ex2: "Iniciar varios servicios a la vez"
    docker_compose_stop:
      desc: "Detener servicios sin eliminar contenedores"
      ex1: "Detener el servicio `web`"
      ex2: "Detener servicios con un tiempo de espera de 5 segundos"

  export_import:
    _root:
      title: üì§ Exportar e Importar
    docker_image_save:
      desc: "Guardar una o m√°s im√°genes de Docker en un archivo tar para su posterior importaci√≥n o transferencia"
      ex1: "Guardar una imagen de Docker en un archivo tar"
      ex2: "Forma alternativa de guardar una imagen en un archivo"
      ex3: "Guardar una imagen espec√≠fica de Redis en un archivo"
    docker_image_load:
      desc: "Cargar im√°genes de Docker desde un archivo tar previamente guardado"
      ex1: "Cargar una imagen de Docker desde un archivo tar"
      ex2: "Cargar una imagen especificando el archivo mediante par√°metro"
      ex3: "Cargar una imagen sin mostrar progreso"
    docker_container_export:
      desc: "Exportar el sistema de archivos de un contenedor como un archivo tar sin historial de imagen ni metadatos"
      ex1: "Exportar el sistema de archivos del contenedor a un archivo"
      ex2: "Exportar un contenedor por nombre"
      ex3: "Exportar por ID de contenedor usando la opci√≥n `-o`"
    docker_image_import:
      desc: "Crear una nueva imagen a partir de un archivo tar de un sistema de archivos"
      ex1: "Importar un archivo como una nueva imagen de Docker"
      ex2: "Importar una imagen directamente desde una URL"
      ex3: "Importar desde la entrada est√°ndar"

  cleanup:
    _root:
      title: üßπ Limpieza y Diagn√≥stico
    docker_system_df:
      desc: "Mostrar uso de disco de Docker: vol√∫menes, im√°genes, contenedores y cach√© de compilaci√≥n"
      ex1: "Salida detallada con informaci√≥n de cada imagen, contenedor y volumen"
      ex2: "Mostrar informaci√≥n en formato JSON"
    docker_system_prune:
      desc: "Eliminar todos los datos no utilizados de Docker: contenedores detenidos, redes no usadas, im√°genes colgantes y cach√© de compilaci√≥n"
      ex1: "Eliminar im√°genes no utilizadas incluidas las intermedias"
      ex2: "Eliminar vol√∫menes no utilizados junto con otros recursos"
    docker_image_prune:
      desc: "Eliminar im√°genes de Docker no utilizadas, incluidas capas colgantes"
      ex1: "Eliminar todas las im√°genes no utilizadas incluidas las colgantes"
      ex2: "Eliminar im√°genes con m√°s de 24 horas"
    docker_container_prune:
      desc: "Eliminar contenedores detenidos que coincidan con filtros o todos si no se especifica ninguno"
      ex1: "Eliminar contenedores detenidos con m√°s de 24 horas"
      ex2: "Eliminar sin confirmaci√≥n"

  swarm:
    _root:
      title: üêù Docker Swarm
    docker_swarm_init:
      desc: "Inicializar un nuevo cl√∫ster de Docker Swarm en el nodo actual"
      ex1: "Inicializar el cl√∫ster especificando la direcci√≥n IP"
      ex2: "Inicializar con un puerto de escucha especificado"
    docker_service_create:
      desc: "Crear un nuevo servicio en el cl√∫ster Swarm"
      ex1: "Crear un servicio Nginx en Swarm"
      ex2: "Crear un servicio con 3 r√©plicas"
      ex3: "Crear un servicio con mapeo de puertos"
    docker_stack_deploy:
      desc: "Desplegar un stack de servicios en el cl√∫ster Swarm basado en un archivo Compose"
      ex1: "Desplegar un stack desde un archivo Compose"
      ex2: "Desplegar con reenv√≠o de autenticaci√≥n de registro"
      ex3: "Usar un archivo Compose alternativo para el stack"
    docker_stack_rm:
      desc: "Eliminar uno o m√°s stacks del cl√∫ster Swarm"
      ex1: "Eliminar el stack `mystack`"
      ex2: "Eliminar todos los stacks (no recomendado)"
      ex3: "Eliminar stack y salir de Swarm"

  advanced_docker:
    _root:
      title: "üíº Uso Avanzado de Docker"

    prof:
      title: "üöÄ Comandos Profesionales de Docker"
      docker_buildx:
        desc: "Herramienta avanzada de compilaci√≥n de im√°genes que reemplaza `docker build`. Soporta multiplataforma, cach√©, compilaciones paralelas y exportaci√≥n a varios formatos. √ötil para CI/CD y desarrollo multiplataforma"
        ex1: "Construir una imagen multiplataforma (ARM y x86 simult√°neamente)"
        ex2: "Construir una imagen y cargarla en la cach√© local del Docker Engine"
        ex3: "Construir y enviar una imagen multiplataforma a un registro"
      docker_context:
        desc: "Gestionar contextos de Docker para trabajar con entornos remotos o m√∫ltiples. Permite cambiar r√°pidamente entre Docker Engines locales y remotos"
        ex1: "Crear un contexto para conectar a un host remoto de Docker"
        ex2: "Cambiar al contexto remoto"
        ex3: "Listar contextos disponibles y el activo"
      docker_system_events:
        desc: "Escuchar eventos de Docker en tiempo real, con filtrado por tipo de evento (por ejemplo, inicio de contenedor). √ötil para monitorizaci√≥n y automatizaci√≥n"
        ex1: "Mostrar solo eventos de inicio de contenedor"
        ex2: "Mostrar eventos de la √∫ltima hora hasta hace 10 minutos"
        ex3: "Mostrar solo eventos relacionados con la red"
        ex4: "Mostrar eventos relacionados con la imagen `nginx`"
      docker_container_update:
        desc: "Cambiar l√≠mites de recursos y configuraciones de un contenedor en ejecuci√≥n sin reiniciarlo"
        ex1: "Establecer l√≠mite de 2 CPUs y 1 GB de RAM"
        ex2: "Establecer pol√≠tica de reinicio autom√°tico `unless-stopped`"
        ex3: "Limitar el n√∫mero de procesos a 200"
      docker_container_diff:
        desc: "Mostrar cambios en el sistema de archivos de un contenedor en comparaci√≥n con su imagen original. √ötil para depuraci√≥n y auditor√≠a"
        ex1: "Mostrar todos los cambios en el sistema de archivos del contenedor"
        ex2: "Mostrar solo archivos a√±adidos (`A` ‚Äî A√±adido)"
      docker_image_history:
        desc: "Mostrar el historial de capas de una imagen: comandos de compilaci√≥n, tama√±o de cada capa y fecha de creaci√≥n. √ötil para optimizaci√≥n y auditor√≠a"
        ex1: "Mostrar historial de capas de una imagen"
        ex2: "Mostrar comandos completos de compilaci√≥n sin truncar"
        ex3: "Mostrar solo comandos de compilaci√≥n y tama√±os de capas"

    practices:
      title: "üõ† Pr√°cticas √∫tiles de Docker y Automatizaci√≥n"
      minimize_image_size:
        title: "Minimizar el tama√±o de la imagen"
        p1: "Usar im√°genes base como `alpine` o `scratch` para un tama√±o m√≠nimo."
        p2: "Para aplanar capas, se puede usar `--squash` durante la compilaci√≥n (requiere activar caracter√≠sticas experimentales)."
        p3: "Adem√°s, eliminar archivos temporales y cach√©s en una sola capa:"
      minimize_layers:
        title: "Minimizar el n√∫mero de capas"
        p1: "Combinar comandos en un solo `RUN` para reducir el n√∫mero de capas y el tama√±o final de la imagen:"
      optimize_build:
        title: "Optimizar la construcci√≥n del Dockerfile"
        p1: "Usar compilaciones multi-etapa para que solo los archivos necesarios permanezcan en la imagen final."
        p2: "Copiar e instalar dependencias primero y luego copiar el c√≥digo ‚Äî esto mejora la cach√© de capas y acelera las reconstrucciones."
      secrets_and_configs:
        title: "Separar secretos y configuraciones"
        p1: "Nunca almacenar archivos `.env`, claves API o certificados privados dentro de la imagen."
        intro: "Usar para la configuraci√≥n:"
        items:
          secret: "`docker secret` (en Swarm)"
          env: "variables de entorno (`-e VAR=value` o `.env`)"
          volumes: "vol√∫menes externos para configuraciones"
      buildkit_secrets:
        title: "Secretos en tiempo de construcci√≥n (BuildKit)"
        p1: "Para pasar secretos de manera segura durante la construcci√≥n, usar la opci√≥n `--secret`:"
        p2: "En Dockerfile, el secreto estar√° disponible en `/run/secrets/mysecret`:"
        note: "üõ° Esto evita que los secretos se almacenen en las capas de la imagen."
      rootless:
        title: "Docker sin root (Rootless)"
        p1: "Ejecutar Docker sin privilegios de root mejora la seguridad y reduce el riesgo de comprometer el host."
        steps_intro: "Para habilitar:"
        check_intro: "Verificar:"
        warning: "‚ö† Algunas funciones (ej. reenv√≠o de puertos <1024) no estar√°n disponibles."
      scan:
        title: "Escanear im√°genes en busca de vulnerabilidades"
        p1: "Usar herramientas integradas:"
        p2: "O la nueva CLI:"
        p3: "Esto ayuda a detectar vulnerabilidades en im√°genes base y dependencias."
      resource_limits:
        title: "Monitorear el uso de recursos"
        p1: "Limitar contenedores por memoria, CPU y n√∫mero de procesos:"
        p2: "Esto previene el consumo excesivo de recursos."
        p3: "Tambi√©n se puede limitar el I/O:"
        p4: "√ötil para contenedores que no deber√≠an sobrecargar el subsistema de disco."
      cleanup:
        title: "Limpieza autom√°tica"
        p1: "Eliminar regularmente im√°genes, contenedores, vol√∫menes y redes no utilizados:"
        warning: "‚ö† Cuidado: este comando elimina todos los recursos no utilizados."
        p2: "Para limpieza selectiva usar:"
      cicd:
        title: "Integraci√≥n con CI/CD"
        p1: "Integrar construcci√≥n, pruebas y despliegue en GitHub Actions, GitLab CI, Jenkins pipelines."
        example_intro: "Ejemplo de paso en GitHub Actions:"
      logging:
        title: "Registro y monitorizaci√≥n"
        p1: "Adjuntar controladores de logs (`--log-driver`) a sistemas centralizados: ELK, Loki, Splunk."
        p2: "Usar Prometheus + cAdvisor para m√©tricas de contenedores."
      production:
        title: "Despliegue en producci√≥n"
        p1: "Separar configuraciones para desarrollo y producci√≥n usando `docker-compose.override.yml`."
        ha_intro: "Para alta disponibilidad y escalado usar:"
        items:
          swarm: "Docker Swarm"
          k8s: "Kubernetes"

    debugging:
      title: "üêû Depuraci√≥n y Perfilado de Contenedores Docker"
      exec:
        group_desc: "Ejecuta un comando dentro de un contenedor en ejecuci√≥n, proporcionando acceso interactivo o la capacidad de ejecutar procesos en su entorno aislado"
        r1: "Iniciar una terminal interactiva (bash) dentro de un contenedor en ejecuci√≥n"
        r2: "Iniciar un shell m√≠nimo dentro del contenedor (si bash no est√° disponible)"
        r3: "Ejecutar un comando dentro del contenedor sin modo interactivo"
      logs:
        group_desc: "Muestra los registros del contenedor especificado, permitiendo ver la salida y eventos relacionados con su operaci√≥n para diagn√≥stico y monitorizaci√≥n"
        r1: "Ver las √∫ltimas 100 l√≠neas de registros con transmisi√≥n en tiempo real"
        r2: "Mostrar todos los registros disponibles del contenedor"
        r3: "Mostrar registros de la √∫ltima hora"
      inspect:
        group_desc: "Muestra informaci√≥n detallada de un objeto Docker (contenedor, imagen, red, etc.) en formato JSON, incluyendo configuraci√≥n y estado"
        r1: "Obtener informaci√≥n JSON completa del contenedor"
        r2: "Obtener el PID del proceso principal del contenedor en el host"
        r3: "Mostrar la direcci√≥n IP del contenedor"
      nsenter:
        group_desc: "Utilidad de Linux para entrar en los espacios de nombres de otro proceso (aqu√≠, el contenedor). Usado con `strace` para rastrear llamadas al sistema dentro del contenedor durante la depuraci√≥n"
        r1: "Entrar en los namespaces del contenedor y rastrear llamadas al sistema del proceso 1"
        r2: "Abrir un shell bash dentro de los namespaces del contenedor"
        r3: "Ver puertos abiertos dentro del contenedor"
      tcpdump:
        group_desc: "Herramienta de consola para capturar y analizar tr√°fico de red. Usada en contenedores para diagnosticar problemas de red, analizar paquetes y monitorizar conexiones"
        r1: "Capturar y analizar tr√°fico de red dentro del contenedor"
        r2: "Capturar tr√°fico solo en el puerto 80"
        r3: "Guardar tr√°fico en un archivo para an√°lisis posterior"
      stats:
        group_desc: "Muestra m√©tricas actuales de uso de recursos (CPU, memoria, red, disco) de uno o varios contenedores en tiempo real"
        r1: "Mostrar en tiempo real uso de CPU, memoria, red y disco por el contenedor"
        r2: "Mostrar estad√≠sticas de todos los contenedores"
        r3: "Mostrar estad√≠sticas una sola vez y salir"
      top:
        group_desc: "Muestra la lista de procesos ejecut√°ndose dentro del contenedor, similar a `ps` en Linux, para analizar la actividad del contenedor"
        r1: "Mostrar procesos ejecut√°ndose dentro del contenedor"
        r2: "Usar formato alternativo de salida como `ps aux`"
        r3: "Mostrar solo PID y comando de procesos"
      diff:
        group_desc: "Muestra cambios en el sistema de archivos del contenedor en comparaci√≥n con su imagen base, indicando archivos a√±adidos, modificados o eliminados"
        r1: "Mostrar cambios en el sistema de archivos del contenedor respecto a la imagen base"
        r2: "Mostrar solo archivos a√±adidos (`A` ‚Äî A√±adido)"
        r3: "Mostrar solo archivos modificados (`C` ‚Äî Cambiado)"
      cp:
        group_desc: "Copia archivos y directorios entre un contenedor y el host, permitiendo intercambio de datos y copias de seguridad"
        r1: "Copiar archivo del contenedor al host"
        r2: "Copiar archivo del host al contenedor"
        r3: "Copiar archivo de log y filtrar l√≠neas de error sin guardarlo en disco"
      advanced_note: "üí° Para depuraci√≥n avanzada se pueden usar `nsenter`, `strace`, `tcpdump`, `gdb` y otras herramientas de bajo nivel."

  compose_adv:
    _root:
      title: "üíº Uso Avanzado de Docker Compose"
    prof:
      title: "üöÄ Comandos Profesionales de Docker Compose"
      up:
        group_desc: "Inicia y gestiona el ciclo de vida de los servicios especificados desde el archivo docker-compose.yml con la posibilidad de ejecutarlos en segundo plano"
        r1: "Ejecutar solo los servicios `web` y `db` en modo desacoplado"
        r2: "Reconstruir im√°genes antes de iniciar los servicios"
        r3: "Eliminar contenedores no definidos en el archivo compose actual"
      build:
        group_desc: "Construye im√°genes para servicios seg√∫n lo descrito en el archivo compose con control de cach√© y paralelismo"
        r1: "Reconstruir completamente im√°genes sin usar cach√©"
        r2: "Construir todos los servicios en paralelo para acelerar el proceso"
        r3: "Construir solo la imagen del servicio `web`"
      pull:
        group_desc: "Descarga las √∫ltimas versiones de im√°genes del registro para todos o servicios espec√≠ficos"
        r1: "Descargar im√°genes para todos los servicios"
        r2: "Descargar solo la imagen del servicio `db`"
        r3: "Continuar la ejecuci√≥n ignorando errores durante la descarga"
      restart:
        group_desc: "Reinicia todos o servicios espec√≠ficos sin recrear contenedores"
        r1: "Reiniciar todos los servicios en el proyecto actual"
        r2: "Reiniciar solo el servicio `worker`"
        r3: "Reiniciar m√∫ltiples servicios a la vez"
      exec:
        group_desc: "Ejecuta un comando dentro de un contenedor de servicio en ejecuci√≥n con opci√≥n de modo interactivo"
        r1: "Ejecutar psql dentro del contenedor del servicio `db`"
        r2: "Abrir un shell dentro del contenedor `web`"
        r3: "Ejecutar una petici√≥n curl desde el contenedor del servicio `api`"
      config:
        group_desc: "Muestra la configuraci√≥n final de Compose considerando todos los archivos y variables de entorno"
        r1: "Mostrar configuraci√≥n combinada en formato YAML"
        r2: "Listar todos los servicios"
        r3: "Mostrar todas las variables de entorno usadas por los servicios"
      watch:
        group_desc: "Reinicia autom√°ticamente los servicios al cambiar archivos fuente, √∫til para desarrollo"
        r1: "Iniciar observaci√≥n de archivos y reiniciar servicios en cambios"
      events:
        group_desc: "Transmitir eventos de Compose: inicio, detenci√≥n, actualizaci√≥n de servicios"
        r1: "Recibir eventos en formato JSON"
      rm:
        group_desc: "Eliminar contenedores de servicios detenidos"
        r1: "Eliminar contenedores de los servicios `web` y `db`"
      pause:
        group_desc: "Pausar la operaci√≥n de servicios"
        r1: "Pausar el servicio `api`"
      unpause:
        group_desc: "Reanudar servicios pausados"
        r1: "Reanudar el servicio `api`"
      create:
        group_desc: "Crear contenedores sin iniciarlos"
        r1: "Crear contenedores para `web` y `db` pero sin iniciarlos"
      images:
        group_desc: "Mostrar lista de im√°genes usadas por los servicios"
        r1: "Mostrar im√°genes de todos los servicios"
      top:
        group_desc: "Mostrar procesos ejecut√°ndose dentro de contenedores de servicios"
        r1: "Mostrar procesos dentro de los contenedores del servicio `web`"

    practices:
      title: "üõ† Pr√°cticas √∫tiles y Automatizaci√≥n con Docker Compose"
      env_separation:
        title: "Separaci√≥n de Entornos"
        p1: "Usar archivos `docker-compose.override.yml` separados para diferentes entornos ‚Äî `development`, `staging`, `production`. Esto ayuda a aislar configuraciones y evitar conflictos."
        p2: "Tambi√©n puedes combinar m√∫ltiples archivos de configuraci√≥n usando la opci√≥n `-f`:"
        p3: "Usar diferentes archivos `.env` (`.env.dev`, `.env.prod`, etc.) para gestionar variables de entorno."
      secrets:
        title: "Almacenamiento Seguro de Secretos"
        p1: "No incluir datos sensibles (contrase√±as, tokens) directamente en archivos Compose. En su lugar, usar:"
        items:
          env: "archivos `.env` para variables de entorno (tener en cuenta que no est√°n cifrados y no deben subirse a repos p√∫blicos)"
          swarm_secret: "`docker secret` y `docker config` para secretos y configuraciones seguras en Docker Swarm"
          volumes: "vol√∫menes externos para archivos de configuraci√≥n con secretos"
          external_mgr: "sistemas externos de gesti√≥n de secretos (ej. HashiCorp Vault, AWS Secrets Manager)"
      startup_order:
        title: "Orden de Inicio con `depends_on` y `healthcheck`"
        p1: "Para hacer que los servicios esperen hasta que sus dependencias est√©n listas:"
      min_downtime:
        title: "Minimizar Tiempo de Inactividad Durante Actualizaciones"
        p1: "Antes de actualizar servicios, ejecutar:"
        p2: "La opci√≥n `-d` ejecuta contenedores en segundo plano, y `--remove-orphans` elimina contenedores no definidos en configuraciones actuales."
        p3: "Para detener y eliminar completamente contenedores antiguos si es necesario:"
        p4: "Esto asegura que se carguen im√°genes frescas y se eliminen contenedores no utilizados sin tiempo de inactividad."
      hot_reload_volumes:
        title: "Recarga en Caliente de C√≥digo para Desarrollo"
        p1: "Usar `volumes` para montar directorios locales en contenedores. Esto permite aplicar cambios de c√≥digo al instante sin reconstruir im√°genes."
        p2: "Tener en cuenta problemas de permisos de archivos y peculiaridades de cach√© de sistema de archivos, especialmente en Windows y macOS, para evitar problemas de rendimiento."
      hot_reload_watch:
        title: "Recarga en Caliente de C√≥digo sin Volumen (Compose 2.22+)"
      central_logging:
        title: "Registro Centralizado de Servicios"
        p1: "Redirigir logs de contenedores a sistemas de monitorizaci√≥n y agregaci√≥n como ELK Stack, Loki, Prometheus y Fluentd para an√°lisis y alertas."
        p2: "Usar controladores de logging de Docker (`--log-driver`) para habilitar recopilaci√≥n centralizada de logs."
        p3: "Configurar drivers de logging para contenedores en Compose:"
      auto_restart:
        title: "Reinicio Autom√°tico de Servicios"
        p1: "Configurar pol√≠tica de reinicio en `docker-compose.yml`:"
        p2: "Otras pol√≠ticas de reinicio incluyen:"
        policies:
          no: "`no` ‚Äî sin reinicio autom√°tico (por defecto)"
          always: "`always` ‚Äî siempre reiniciar el contenedor"
          on_failure: "`on-failure` ‚Äî reiniciar solo en fallos (opcional con n√∫mero de reintentos)"
        p3: "En producci√≥n, `unless-stopped` es la mejor opci√≥n para garantizar resiliencia del servicio."
        p4: "Esto habilita recuperaci√≥n autom√°tica de servicios tras fallos o reinicios del host."
      profiles:
        title: "Perfiles de Servicios"
        p1: "Permite ejecutar solo grupos espec√≠ficos de servicios:"
        p2: "Para ejecutar solo el perfil frontend:"

    debugging:
      title: "üêû Depuraci√≥n y Perfilado de Servicios en Docker Compose"
      exec:
        group_desc: "Ejecuta un comando dentro de un servicio en ejecuci√≥n, proporcionando acceso al contenedor o la ejecuci√≥n de procesos individuales"
        r1: "Abrir un shell dentro del contenedor del servicio `web`"
        r2: "Ejecutar el comando psql dentro del contenedor del servicio `db`"
      logs:
        group_desc: "Ver registros de servicios para diagn√≥stico y monitorizaci√≥n"
        r1: "Ver registros del servicio `db` en tiempo real"
        r2: "Mostrar las √∫ltimas 50 l√≠neas de registros del servicio `api`"
        r3: "Mostrar registros de la √∫ltima hora del servicio `web`"
      inspect:
        group_desc: "Ver informaci√≥n detallada del contenedor que ejecuta un servicio"
        r1: "Obtener JSON con informaci√≥n detallada del contenedor del servicio `web`"
      stats:
        group_desc: "Monitorear uso de recursos de contenedores de servicios en ejecuci√≥n"
        r1: "Rastrear uso de CPU, memoria y otros recursos para el contenedor del servicio `worker`"
      run:
        group_desc: "Ejecutar un contenedor temporal con la configuraci√≥n del servicio, √∫til para depuraci√≥n"
        r1: "Iniciar un contenedor √∫nico para el servicio `web` con shell interactivo"
      cp:
        group_desc: "Copiar archivos entre host y contenedor"
        r1: "Copiar un archivo desde el contenedor del servicio `db` al host"
      tip:
        one_off: "üí° Para depuraci√≥n c√≥moda de configuraciones multi-servicio complejas, usar `docker compose run --rm` para lanzar contenedores individuales con redes y vol√∫menes necesarios sin afectar los servicios principales."

  resources:
    title: "üìö Recursos adicionales"
    ignore:
      title: "üö´ Ignorar archivos con `.dockerignore`"
      p1: "A√±adir archivos y carpetas al archivo `.dockerignore` que no deben incluirse en la imagen para reducir tama√±o y acelerar la construcci√≥n:"
    aliases:
      title: "‚ö° Simplificaci√≥n de Comandos con Alias"
      p1: "Puedes crear alias para comandos usados frecuentemente y ejecutarlos m√°s r√°pido:"
    advice:
      title: "üß† Consejo: Uso de Docker"
      b1: "No intentes memorizar todo ‚Äî usa `docker --help` o `docker <command> --help` para explorar comandos."
      b2: "Practica regularmente y experimenta con proyectos simples."
      b3: "Supervisa tama√±os de im√°genes y elimina archivos innecesarios con `.dockerignore`."
    links:
      title: "üåê Enlaces √∫tiles"
      docs_intro: "üìò **Documentaci√≥n Oficial de Docker** ‚Äî gu√≠as y referencias completas sobre todos los temas de Docker:"
      sheet_intro: "üìô **Hoja de referencia de Docker** ‚Äî hoja oficial completa de referencia de comandos:"
      hub_intro: "üìó **Docker Hub** ‚Äî im√°genes y registros:"
