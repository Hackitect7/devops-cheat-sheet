git:
  meta:
    _root:
      title: "üêô Git e GitHub CLI"
      desc: "Comandos b√°sicos e avan√ßados do Git para controlo de vers√µes, branches, reposit√≥rios remotos, stash, tags e GitHub CLI."

  basic:
    _root:
      title: "üîπ Comandos B√°sicos"
    git_add:
      desc: "Adicionar um ficheiro √† √°rea de staging"
      ex1: "Adicionar um ficheiro espec√≠fico para o pr√≥ximo commit"
      ex2: "Adicionar todas as altera√ß√µes no diret√≥rio atual e subdiret√≥rios"
      ex3: "Escolher interativamente que partes de ficheiros adicionar (√∫til para commits parciais)"
    git_clone:
      desc: "Clonar um reposit√≥rio para um novo diret√≥rio"
      ex1: "Clonar apenas a branch especificada (em vez da predefinida)"
      ex2: "Clonar apenas o √∫ltimo commit, criando uma c√≥pia superficial para poupar tempo e espa√ßo"
    git_commit:
      desc: "Registar altera√ß√µes no reposit√≥rio"
      ex1: "Commit com mensagem sem abrir o editor"
      ex2: "Adicionar e fazer commit de todos os ficheiros modificados com uma mensagem"
      ex3: "Atualizar o √∫ltimo commit (alterar mensagem ou incluir mais altera√ß√µes)"
      ex4: "Criar um commit fixup para ser automaticamente squash durante rebase interativo"
    git_config:
      desc: "Obter e definir op√ß√µes do reposit√≥rio ou globais"
      ex1: "Definir nome de utilizador global do Git"
      ex2: "Definir email global do Git"
      ex3: "Listar todas as defini√ß√µes do Git (nome, email, editor, etc.)"
    git_diff:
      desc: "Mostrar altera√ß√µes entre commits, commit e working tree, etc."
      ex1: "Mostrar o que mudou desde o √∫ltimo commit (altera√ß√µes n√£o adicionadas)"
      ex2: "Mostrar o que ser√° inclu√≠do no pr√≥ximo commit"
      ex3: "Mostrar altera√ß√µes com diferen√ßas a n√≠vel de palavras"
    git_grep:
      desc: "Procurar dentro dos ficheiros do reposit√≥rio"
      ex1: "Encontrar todas as men√ß√µes de `functionName` em todos os ficheiros do projeto"
      ex2: "Encontrar linhas contendo `TODO` e mostrar n√∫meros de linha (√∫til para encontrar notas no c√≥digo)"
      ex3: "Procurar a palavra `login` sem diferenciar mai√∫sculas/min√∫sculas"
    git_init:
      desc: "Criar um reposit√≥rio Git vazio ou reinicializar um existente"
      ex1: "Inicializar um novo reposit√≥rio no diret√≥rio my-project"
      ex2: "Inicializar um reposit√≥rio bare"
    git_log:
      desc: "Mostrar logs de commits"
      ex1: "Mostrar hist√≥rico de commits em formato compacto (uma linha)"
      ex2: "Mostrar todas as branches em gr√°fico visual de commits"
      ex3: "Mostrar patch e estat√≠sticas de altera√ß√µes por commit"
    git_reset:
      desc: "Remover ficheiros da staging area, mantendo altera√ß√µes no diret√≥rio de trabalho"
      ex1: "Remover um ficheiro da staging (mantendo as edi√ß√µes)"
      ex2: "Voltar um commit atr√°s e apagar todas as altera√ß√µes (irrevers√≠vel!)"
      ex3: "Desfazer o √∫ltimo commit mas manter altera√ß√µes prontas para novo commit"
      ex4: "Desfazer um commit mas manter altera√ß√µes n√£o adicionadas no diret√≥rio de trabalho"
    git_show:
      desc: "Mostrar v√°rios tipos de objetos"
      ex1: "Mostrar altera√ß√µes e mensagem de um commit espec√≠fico"
      ex2: "Mostrar o commit anterior ao atual"
      ex3: "Mostrar resumo das altera√ß√µes de ficheiros no √∫ltimo commit"
    git_status:
      desc: "Mostrar o estado da √°rvore de trabalho"
      ex1: "Mostrar estado em formato curto"
      ex2: "Mostrar branch atual e estado dos ficheiros"

  branching_merging:
    _root:
      title: "üåø Branches e Merge"
    git_branch:
      desc: "Criar, listar ou apagar branches"
      ex1: "Criar uma nova branch chamada `new-feature`"
      ex2: "Apagar uma branch local chamada `old-feature`"
    git_checkout:
      desc: "Mudar de branch ou restaurar ficheiros de outro commit"
      ex1: "Mudar para a branch `main`"
      ex2: "Criar e mudar para uma nova branch chamada `new-branch`"
    git_switch:
      desc: "Mudar de branch (alternativa simplificada ao `checkout`)"
      ex1: "Mudar para a branch `main`"
      ex2: "Criar e mudar para uma nova branch chamada `feature-x`"
      ex3: "Mudar para uma branch existente chamada `new-feature`"
    git_merge:
      desc: "Combinar altera√ß√µes de outra branch na atual"
      ex1: "Fazer merge da branch `new-feature` na branch atual"
      ex2: "For√ßar a cria√ß√£o de commit de merge (mesmo que fast-forward seja poss√≠vel)"
      ex3: "Cancelar merge e reverter altera√ß√µes em caso de conflitos"
    git_rebase:
      desc: "Mover ou reaplicar commits sobre um novo commit base"
      ex1: "Reaplicar commits da tua branch sobre a branch `main`"
      ex2: "Editar interativamente os √∫ltimos 3 commits"
      ex3: "Parar e desfazer um rebase em andamento"
      ex4: "Squash autom√°tico de commits marcados como fixup ou squash durante rebase interativo"
    git_cherry_pick:
      desc: "Aplicar commits espec√≠ficos de outra branch"
      ex1: "Aplicar um commit espec√≠fico (por hash) na branch atual"
      ex2: "Continuar cherry-pick ap√≥s resolver conflitos"
      ex3: "Aplicar um intervalo de commits de `A` (exclu√≠do) at√© `B` (inclu√≠do)"

  remote:
    _root:
      title: "üì° Reposit√≥rios Remotos"
    git_remote:
      desc: "Gerir liga√ß√µes a reposit√≥rios remotos (como GitHub)"
      ex1: "Mostrar nomes de remotos e os seus URLs"
      ex2: "Adicionar um reposit√≥rio remoto chamado `origin`"
    git_pull:
      desc: "Descarregar e fazer merge autom√°tico de altera√ß√µes de uma branch remota"
      ex1: "Buscar e fundir altera√ß√µes da branch remota `main` na branch atual"
      ex2: "Buscar e rebasear a branch atual sobre a remota em vez de fazer merge"
    git_push:
      desc: "Enviar altera√ß√µes locais para um reposit√≥rio remoto"
      ex1: "Enviar a branch local `main` para o remoto `origin`"
    git_fetch:
      desc: "Descarregar altera√ß√µes do remoto sem fazer merge"
      ex1: "Buscar todas as atualiza√ß√µes do remoto `origin`, mas n√£o aplicar ainda"
      ex2: "Buscar apenas a branch `main` do remoto"
      ex3: "Buscar atualiza√ß√µes de todos os remotos"
      ex4: "Limpar branches apagadas ‚Äî remover refer√™ncias locais a branches eliminadas remotamente"
      ex5: "Mostrar o que seria descarregado sem realmente baixar nada"
      ex6: "For√ßar atualiza√ß√£o da branch local de tracking (`origin/main`), sobrescrevendo conflitos"

  stash_cleanup:
    _root:
      title: "üì¶ Stash e Limpeza"
    git_stash:
      desc: "Guardar temporariamente altera√ß√µes n√£o commitadas (work in progress)"
      ex1: "Guardar ficheiros modificados/adicionados e reverter diret√≥rio de trabalho para √∫ltimo commit"
      ex2: "Reaplicar as √∫ltimas altera√ß√µes em stash (stash permanece guardado)"
      ex3: "Reaplicar e remover o √∫ltimo stash"
      ex4: "Mostrar lista de todas as altera√ß√µes em stash"
      ex5: "Criar uma nova branch e aplicar-lhe o √∫ltimo stash"
    git_clean:
      desc: "Eliminar permanentemente ficheiros n√£o rastreados (fora do Git)"
      ex1: "Eliminar ficheiros n√£o rastreados no diret√≥rio atual"
      ex2: "Eliminar ficheiros e pastas n√£o rastreados"
      ex3: "Pr√©-visualizar o que ser√° apagado (execu√ß√£o segura)"

  tags:
    _root:
      title: "üè∑Ô∏è Tags"
    git_tag:
      desc: "Criar, listar ou apagar tags para marcar pontos espec√≠ficos na hist√≥ria (como releases)"
      ex1: "Criar uma tag anotada chamada `v1.0` com mensagem (guardada como objeto completo do Git, bom para releases)"
      ex2: "Apagar a tag local `v1.0` (n√£o afeta remoto)"
    git_push:
      desc: "Enviar commits, branches e tags do reposit√≥rio local para remoto"
      ex1: "Enviar todas as tags locais para o remoto (√∫til ap√≥s criar v√°rias vers√µes)"
      ex2: "Enviar uma tag espec√≠fica (ex: `v1.0`) para o reposit√≥rio remoto"
      ex3: "Apagar a tag remota `v1.0` (usar sintaxe com dois pontos)"

  conflicts:
    _root:
      title: "üõ†Ô∏è Resolu√ß√£o de Conflitos"
    git_mergetool:
      desc: "Abrir ferramenta visual para ajudar a resolver conflitos de merge"
      ex1: "Usar ferramenta espec√≠fica (como Meld) para corrigir conflitos"
    git_rerere:
      desc: "Permitir que o Git memorize como resolveste conflitos anteriormente"
      ex1: "Ativar reutiliza√ß√£o autom√°tica de resolu√ß√µes anteriores"
      ex2: "Mostrar quais ficheiros t√™m resolu√ß√µes de conflitos guardadas"
      ex3: "Mostrar altera√ß√µes que o Git guardou para reutiliza√ß√£o futura"

  advanced:
    _root:
      title: "‚öôÔ∏è Comandos Avan√ßados"
    git_bisect:
      desc: "Usar pesquisa bin√°ria para encontrar o commit que introduziu um bug"
      ex1: "Iniciar pesquisa bin√°ria entre um commit bom e um mau para localizar bug"
      ex2: 'Marcar commit atual como "mau" (cont√©m o bug)'
      ex3: 'Marcar commit conhecido como "bom" onde bug n√£o existia'
    git_blame:
      desc: "Mostrar quem modificou cada linha de um ficheiro pela √∫ltima vez, com revis√£o e autor"
      ex1: "Mostrar autor e informa√ß√£o de commit para cada linha do ficheiro"
      ex2: "Mostrar blame apenas para linhas 10 a 20"
      ex3: "Mostrar emails dos autores junto das altera√ß√µes"
    git_reflog:
      desc: "Ver e gerir o reflog (movimentos de branches e HEAD)"
      ex1: "Ver onde a branch `main` apontava h√° uma semana"
      ex2: "Pr√©-visualizar entradas de reflog mais antigas que 30 dias que podem ser limpas"
      ex3: "Apagar entrada espec√≠fica do reflog (usar com cuidado, pode afetar recupera√ß√£o)"
    git_submodule:
      desc: "Adicionar, inicializar, atualizar ou inspecionar subm√≥dulos (reposit√≥rios dentro de reposit√≥rios)"
      ex1: "Adicionar um reposit√≥rio externo como subm√≥dulo num caminho espec√≠fico"
      ex2: "Inicializar e descarregar todos os subm√≥dulos listados no reposit√≥rio"
      ex3: "Executar `git pull` dentro de cada subm√≥dulo para atualizar para √∫ltimo commit"
      ex4: "Sincronizar URLs de subm√≥dulos ap√≥s altera√ß√µes em `.gitmodules`"
      ex5: "Atualizar subm√≥dulos para o √∫ltimo commit das branches remotas"
    git_archive:
      desc: "Criar um arquivo (zip, tar, etc.) de ficheiros de um commit ou branch espec√≠fico"
      ex1: "Criar arquivo ZIP dos ficheiros atuais no HEAD"
      ex2: "Criar arquivo comprimido `.tar.gz` do HEAD atual"
      ex3: "Criar `.tar.gz` com ficheiros do projeto atual, colocando tudo dentro da pasta `project/`"
    git_gc:
      desc: "Limpar ficheiros desnecess√°rios e otimizar o reposit√≥rio para desempenho"
      ex1: "Executar limpeza e otimiza√ß√£o completa (pode ser lenta mas eficaz)"
      ex2: "Remover imediatamente todos os objetos inacess√≠veis (perigoso se n√£o tiver certeza)"
    git_shortlog:
      desc: "Resumo r√°pido de autores e seus commits"
      ex1: "Mostrar lista de autores com emails (ex: para analisar contribui√ß√µes)"
      ex2: "Mostrar quantos commits cada autor fez, ordenado por n√∫mero de commits"
      ex3: "O mesmo, mas incluindo nomes e emails ‚Äî √∫til para rastrear atividade detalhada"
    git_revert:
      desc: "Criar um novo commit que desfaz altera√ß√µes de um commit anterior sem reescrever hist√≥rico"
      ex1: "Desfazer o √∫ltimo commit criando novo commit que reverte altera√ß√µes"
      ex2: "Desfazer commit espec√≠fico por hash, adicionando commit de revers√£o em seguran√ßa"

  gh:
    _root:
      title: "üêô GitHub CLI"
      note: "`gh` permite gerir o GitHub a partir do terminal."
    gh_auth_login:
      desc: "Autenticar-se com um host do GitHub para permitir que os comandos da CLI interajam com a sua conta"
      ex1: "Autenticar usando um personal access token armazenado num ficheiro (`mytoken.txt`)"
      ex2: "Autenticar-se num servidor GitHub Enterprise (n√£o github.com)"
    gh_repo_clone:
      desc: "Clonar um reposit√≥rio GitHub para a sua m√°quina local"
      ex1: "Clonar o reposit√≥rio repo do utilizador `user` para uma pasta chamada `repo`"
      ex2: "Clonar o reposit√≥rio mas descarregar apenas o √∫ltimo commit para clonagem mais r√°pida e leve"
      ex3: "Clonar o reposit√≥rio para uma pasta personalizada `workspace/cli`"
    gh_issue_list:
      desc: "Listar issues num reposit√≥rio GitHub, opcionalmente filtradas por v√°rios crit√©rios"
      ex1: "Listar issues atribu√≠das a si"
      ex2: "Listar issues independentemente do estado (abertas ou fechadas)"
      ex3: 'Listar issues que contenham "error", n√£o atribu√≠das, ordenadas por data de cria√ß√£o ascendente'
    gh_pr_create:
      desc: "Criar um pull request no GitHub via CLI"
      ex1: "Criar um pull request com o t√≠tulo indicado"
      ex2: 'Associar o pull request a um projeto GitHub chamado "Roadmap"'
      ex3: "Criar um PR da branch `feature` do fork `monalisa` para a branch `develop`"
    gh_repo_create:
      desc: "Criar um novo reposit√≥rio GitHub a partir da CLI"
      ex1: "Criar um novo reposit√≥rio chamado `my-project` no GitHub (seguem prompts interativos)"
      ex2: "Criar um reposit√≥rio p√∫blico e clon√°-lo localmente"
      ex3: "Criar um reposit√≥rio remoto privado a partir da pasta atual e adicionar remoto chamado `upstream`"

  aliases:
    _root:
      title: "üí° Aliases do Git (Atalhos √öteis)"
      intro: "Configurar aliases convenientes para acelerar comandos Git comuns:"

  pro:
    _root:
      title: "üöÄ Comandos Avan√ßados de Git para Profissionais"
    git_filter_repo:
      desc: "Ferramenta poderosa e eficiente para reescrever o hist√≥rico Git para remover ou modificar ficheiros, autoria ou caminhos; substitui o git filter-branch com mais velocidade e seguran√ßa"
      ex1: "Reescrever eficientemente o hist√≥rico do reposit√≥rio para remover ficheiros ou diret√≥rios sens√≠veis sem problemas de performance do `git filter-branch`. Usar com cuidado"
      ex2: "Substituir em massa strings ou padr√µes em todo o hist√≥rico (ex: sanitizar credenciais)"
      ex3: "Extrair hist√≥rico de um subdiret√≥rio para um novo reposit√≥rio, preservando metadados de commits"
    git_worktree:
      desc: "Gerir m√∫ltiplos diret√≥rios de trabalho ligados a um √∫nico reposit√≥rio, permitindo trabalho paralelo em diferentes branches sem clonar"
      ex1: "Criar um diret√≥rio de trabalho adicional ligado ao mesmo reposit√≥rio, permitindo checkouts paralelos de branches sem clones"
      ex2: "Listar todos os worktrees ativos, os seus caminhos e branches associadas"
      ex3: "Remover um worktree ligado quando j√° n√£o for necess√°rio, limpando diret√≥rios de trabalho em seguran√ßa"
    git_replace:
      desc: "Criar refer√™ncias tempor√°rias que substituem objetos existentes, permitindo manipula√ß√£o local de hist√≥rico sem destrui√ß√£o e para testes"
      ex1: "Trocar temporariamente um commit por outro no reposit√≥rio local, √∫til para testes ou patch de hist√≥rico sem reescrev√™-lo"
      ex2: "Mostrar todas as refer√™ncias de substitui√ß√£o ativas"
      ex3: "Eliminar uma refer√™ncia de substitui√ß√£o espec√≠fica para reverter comportamento"
    git_stash_adv:
      desc: "Guardar temporariamente altera√ß√µes n√£o commitadas numa pilha, permitindo mudar de contexto sem commit de trabalho inacabado"
      ex1: "Selecionar interativamente blocos de altera√ß√µes para stash, dando controlo granular sobre o que √© guardado"
      ex2: "Criar um stash com uma mensagem personalizada para identifica√ß√£o mais f√°cil"
      ex3: "Aplicar um stash espec√≠fico da lista sem o remover"
    git_rebase_adv:
      desc: "Reaplicar commits sobre outra base, facilitando hist√≥rico linear mais limpo e edi√ß√£o interativa de hist√≥rico"
      ex1: "Iniciar sess√£o de rebase interativo que reordena e faz squash autom√°tico de commits marcados como fixup ou squash, limpando hist√≥rico"
      ex2: "Reordenar e fazer squash autom√°tico de commits fixup/squash, limpando hist√≥rico antes de enviar"
      ex3: "Criar um commit fixup que ser√° autosquash durante rebase interativo"
      ex4: "Criar um commit squash para combinar com commit especificado no rebase"
    git_bisect_pro:
      desc: "Ferramenta de pesquisa bin√°ria para identificar de forma eficiente o commit que introduziu um bug testando commits sucessivos e restringindo a altera√ß√£o defeituosa"
      ex1: "Automatizar o processo de bisect executando um script de teste em cada commit para identificar rapidamente o commit que introduziu o bug sem interven√ß√£o manual"
      ex2: "Automatizar bisse√ß√£o com script de teste em cada commit, acelerando bastante a identifica√ß√£o de bugs"
      ex3: "Abrir ferramenta gr√°fica para visualizar o processo de bisse√ß√£o"
      ex4: "Sair do modo bisect e voltar ao HEAD original"
    git_commit_pro:
      desc: "Registar altera√ß√µes no reposit√≥rio com op√ß√µes detalhadas para amend, sign, fixup e personaliza√ß√£o de mensagens para manter hist√≥rico de alta qualidade"
      ex1: "Criar um commit assinado com a sua chave GPG para garantir verifica√ß√£o criptogr√°fica da autenticidade e autoria do commit"
      ex2: "Assinar criptograficamente commits com a sua chave GPG, garantindo integridade e verifica√ß√£o de autoria"
      ex3: "Configurar globalmente a chave GPG usada para assinar commits"
      ex4: "Verificar e mostrar informa√ß√£o da assinatura GPG de commits"
    git_reflog_pro:
      desc: "Manter log de atualiza√ß√µes ao HEAD e branches, essencial para recuperar commits perdidos e compreender movimentos locais de hist√≥rico"
      ex1: "Repor a branch atual para estado anterior a partir do reflog para recuperar ou desfazer altera√ß√µes"
      ex2: "Expirar imediatamente todas as entradas de reflog, limpando hist√≥rico (usar com cautela)"

  pro_tips:
    _root:
      title: "üß∞ Dicas de Workflow Profissional e Automa√ß√£o"
    columns:
      topic: "T√≥pico"
      commands_example: "Comandos / Exemplo"
      explanation_tips: "Explica√ß√£o & Dicas Pro"
    aggressive_cleanup:
      topic: "Limpeza Agressiva do Reposit√≥rio"
      desc: "Executa garbage collection profunda e remove objetos inacess√≠veis imediatamente para otimiza√ß√£o. Usar em janelas de manuten√ß√£o"
    parallel_worktrees:
      topic: "Worktrees em Paralelo"
      desc: "Manter m√∫ltiplos diret√≥rios de trabalho para desenvolvimento simult√¢neo de funcionalidades, evitando overhead de clones"
    linear_history:
      topic: "Hist√≥rico Linear Limpo"
      desc: "Antes de enviar, fazer rebase interativo com autosquash para manter hist√≥rico limpo e leg√≠vel"
    secure_commits:
      topic: "Commits Seguros"
      desc: "Assinar commits com GPG para aumentar confian√ßa em reposit√≥rios partilhados, obrigat√≥rio em muitos ambientes empresariais"
    automated_bisect:
      topic: "Bisse√ß√£o Automatizada"
      desc: "Automatizar procura de bugs executando script de teste em cada commit candidato durante bisect"
    conflict_cache:
      topic: "Cache de Resolu√ß√£o de Conflitos"
      desc: "Ativar reutiliza√ß√£o de resolu√ß√µes de conflitos para acelerar resolu√ß√£o de conflitos repetidos em rebase ou merges"
    shared_aliases_hooks:
      topic: "Aliases e Hooks Partilhados"
      desc: "Guardar aliases Git comuns e hooks de commit num reposit√≥rio partilhado ou pipeline CI para impor standards de equipa e aumentar produtividade"

  resources:
    _root:
      title: "Recursos Adicionais"
    tip:
      title: "üß† **Dica**"
      desc: "N√£o tente memorizar tudo. Use `--help`, explore e pratique regularmente:"
    links:
      title: "üåê Links √öteis"
      official_docs: "üìò **Documenta√ß√£o Oficial do Git** ‚Äî manual detalhado para todos os comandos Git:"
      learn_branching: "üìô **Learn Git Branching** ‚Äî tutorial visual interativo para dominar conceitos de branching:"
      pro_git_book: "üìï **Livro Pro Git** (gratuito, de Scott Chacon & Ben Straub):"
      official_cheatsheet: "üìó **Git Cheatsheet** (refer√™ncia concisa oficial):"
